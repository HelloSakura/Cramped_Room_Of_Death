{"version":3,"sources":["file:///E:/git/Cramped_Room_Of_Death/assets/scripts/scenes/BattleManager.ts"],"names":["_decorator","Component","Node","TileMapManager","levels","DataManager","TILE_HEIGHT","TILE_WIDTH","EventManager","EVENT_ENUM","createUINode","PlayerManager","WoodenSkeletonManager","ccclass","property","BattleManager","level","stage","onLoad","Instance","on","NEXT_LEVEL","nextLevel","onDestroy","off","start","generateStage","initLevel","levelIndex","clearLevel","mapInfo","mapRowCount","length","mapColumnCount","generateTileMap","generateEnemy","generatePlayer","destroyAllChildren","reset","setParent","node","name","tileMap","tileMapManager","addComponent","init","adaptPos","player","playManager","emit","PLAYER_BORN","enemy","woodenSkeletonManager","enemies","push","disX","disY","setPosition"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node } from 'cc';\r\nimport { TileMapManager } from '../tile/TileMapManager';\r\nimport levels, { ILevel } from '../../levels';\r\nimport DataManager from '../../runtime/DataManager';\r\nimport { TILE_HEIGHT, TILE_WIDTH } from '../tile/TileManger';\r\nimport EventManager from '../../runtime/EventManager';\r\nimport { EVENT_ENUM } from '../../enums';\r\nimport { createUINode } from '../../utils';\r\nimport { PlayerManager } from '../player/PlayerManager';\r\nimport { WoodenSkeletonManager } from '../woodenSkeleton/WoodenSkeletonManager';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('BattleManager')\r\nexport class BattleManager extends Component {\r\n    level:ILevel;\r\n    stage:Node;\r\n\r\n    //\r\n    onLoad(){\r\n        //绑定切换关卡\r\n        EventManager.Instance.on(EVENT_ENUM.NEXT_LEVEL, this.nextLevel, this);\r\n    }\r\n\r\n    onDestroy(){\r\n        //解绑切换关卡\r\n        EventManager.Instance.off(EVENT_ENUM.NEXT_LEVEL, this.nextLevel)\r\n    }\r\n\r\n    start() {\r\n        this.generateStage();\r\n        this.initLevel();\r\n    }\r\n\r\n    initLevel(){\r\n        const level = levels[`level${DataManager.Instance.levelIndex}`];\r\n        if(level){\r\n            this.clearLevel();\r\n            this.level = level;\r\n            DataManager.Instance.mapInfo = this.level.mapInfo;\r\n            DataManager.Instance.mapRowCount = this.level.mapInfo.length || 0;\r\n            DataManager.Instance.mapColumnCount = this.level.mapInfo[0].length || 0;\r\n\r\n            this.generateTileMap();\r\n            this.generateEnemy();\r\n            //生成player\r\n            this.generatePlayer();\r\n            \r\n        }\r\n    }\r\n\r\n    nextLevel(){\r\n        DataManager.Instance.levelIndex++;\r\n        this.initLevel();\r\n    }\r\n\r\n    clearLevel(){\r\n        //清空数据，销毁上一关地图后再加载下一关\r\n        this.stage.destroyAllChildren();\r\n        DataManager.Instance.reset();\r\n    }\r\n\r\n    generateStage(){\r\n        //创建舞台，所有单元放在舞台上\r\n        this.stage = new Node();\r\n        this.stage.setParent(this.node);\r\n        this.stage.name = \"stage\";\r\n    }\r\n\r\n\r\n    async generateTileMap(){\r\n        //创建瓦片地图节点\r\n        let tileMap = new Node();\r\n        tileMap.setParent(this.stage);\r\n\r\n        //执行生成逻辑，放在组件上\r\n        const tileMapManager = tileMap.addComponent(TileMapManager);\r\n        await tileMapManager.init();\r\n\r\n        //地图居中\r\n        this.adaptPos();\r\n    }\r\n\r\n    async generatePlayer(){\r\n        const player = createUINode();\r\n        player.setParent(this.stage);\r\n        const playManager = player.addComponent(PlayerManager);\r\n        await playManager.init();\r\n        DataManager.Instance.player = playManager;\r\n        EventManager.Instance.emit(EVENT_ENUM.PLAYER_BORN, true);\r\n        \r\n    }\r\n\r\n    async generateEnemy(){\r\n        const enemy = createUINode();\r\n        enemy.setParent(this.stage);\r\n        const woodenSkeletonManager = enemy.addComponent(WoodenSkeletonManager);\r\n        await woodenSkeletonManager.init();\r\n        DataManager.Instance.enemies.push(WoodenSkeletonManager);\r\n    }\r\n\r\n    adaptPos(){\r\n        //将舞台置为中间位置\r\n        //解包\r\n        const {mapRowCount, mapColumnCount} = DataManager.Instance;\r\n        const disX = TILE_WIDTH * mapRowCount/2;\r\n        const disY = TILE_HEIGHT * mapColumnCount/2 + 100;\r\n        this.stage.setPosition(-disX, disY);\r\n\r\n    }\r\n}\r\n\r\n\r\n"]}