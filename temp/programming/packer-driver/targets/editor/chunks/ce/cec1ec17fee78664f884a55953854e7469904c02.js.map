{"version":3,"sources":["file:///E:/git/Cramped_Room_Of_Death/assets/runtime/FadeManager.ts"],"names":["FadeManager","director","RenderRoot2D","Vec3","Singleton","DEFAULT_DURATION","DrawManager","createUINode","_fader","Instance","GetInstance","Fader","root","addComponent","faderNode","setParent","setPosition","ZERO","init","addPersistRootNode","fadeIn","duration","fadeOut","mask"],"mappings":";;;qKAMqBA,W;;;;;;;;;;;;;;;;;;;;;;;;;;;AANbC,MAAAA,Q,OAAAA,Q;AAAUC,MAAAA,Y,OAAAA,Y;AAAcC,MAAAA,I,OAAAA,I;;AACzBC,MAAAA,S;;AACEC,MAAAA,gB,iBAAAA,gB;AAAkBC,MAAAA,W,iBAAAA,W;;AAClBC,MAAAA,Y,iBAAAA,Y;;;;;;;;;yBAGYP,W,GAAN,MAAMA,WAAN;AAAA;AAAA,kCAAmC;AAAA;AAAA;AAAA,eAKtCQ,MALsC,GAKjB,IALiB;AAAA;;AAC3B,mBAARC,QAAQ,GAAE;AACjB,iBAAO,MAAMC,WAAN,EAAP;AACH;;AAIQ,YAALC,KAAK,GAAE;AACP,cAAG,KAAKH,MAAL,KAAgB,IAAnB,EAAwB;AACpB,mBAAO,KAAKA,MAAZ;AACH;;AAGD,gBAAMI,IAAI,GAAG;AAAA;AAAA,6CAAb;AACAA,UAAAA,IAAI,CAACC,YAAL,CAAkBX,YAAlB;AACA,gBAAMY,SAAS,GAAG;AAAA;AAAA,6CAAlB;AACAA,UAAAA,SAAS,CAACC,SAAV,CAAoBH,IAApB;AACAE,UAAAA,SAAS,CAACE,WAAV,CAAsBb,IAAI,CAACc,IAA3B;AACA,eAAKT,MAAL,GAAcM,SAAS,CAACD,YAAV;AAAA;AAAA,yCAAd;;AACA,eAAKL,MAAL,CAAYU,IAAZ,GAZO,CAaP;;AACA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;;;AACQjB,UAAAA,QAAQ,CAACkB,kBAAT,CAA4BP,IAA5B;AACA,iBAAO,KAAKJ,MAAZ;AACH;;AAEDY,QAAAA,MAAM,CAACC,QAAe;AAAA;AAAA,gDAAhB,EAAoC;AACtC,iBAAO,KAAKV,KAAL,CAAWS,MAAX,CAAkBC,QAAlB,CAAP;AACH;;AAEDC,QAAAA,OAAO,CAACD,QAAe;AAAA;AAAA,gDAAhB,EAAoC;AACvC,iBAAO,KAAKV,KAAL,CAAWW,OAAX,CAAmBD,QAAnB,CAAP;AACH;;AAEDE,QAAAA,IAAI,GAAE;AACF,iBAAO,KAAKZ,KAAL,CAAWY,IAAX,EAAP;AACH;;AA3C6C,O","sourcesContent":["import {director, RenderRoot2D, Vec3 } from \"cc\";\r\nimport Singleton from \"../base/Singleton\";\r\nimport { DEFAULT_DURATION, DrawManager } from \"../scripts/ui/DrawManager\";\r\nimport { createUINode } from \"../utils\";\r\n\r\n\r\nexport default class FadeManager extends Singleton{\r\n    static get Instance(){\r\n        return super.GetInstance<FadeManager>();\r\n    }\r\n\r\n    private _fader:DrawManager = null;\r\n\r\n    get Fader(){\r\n        if(this._fader !== null){\r\n            return this._fader;\r\n        }\r\n\r\n\r\n        const root = createUINode();\r\n        root.addComponent(RenderRoot2D);\r\n        const faderNode = createUINode();\r\n        faderNode.setParent(root);\r\n        faderNode.setPosition(Vec3.ZERO);\r\n        this._fader = faderNode.addComponent(DrawManager);\r\n        this._fader.init();\r\n        //声明为常驻节点\r\n        /**\r\n         引擎同时只会运行一个场景，当切换场景时，\r\n         默认会将场景内所有节点和其他实例销毁。\r\n         如果我们需要用一个组件控制所有场景的加载，\r\n         或在场景之间传递参数数据，就需要将\r\n         该组件所在节点标记为「常驻节点」，\r\n         使它在场景切换时不被自动销毁，常驻内存\r\n         */\r\n        director.addPersistRootNode(root);\r\n        return this._fader;\r\n    }\r\n\r\n    fadeIn(duration:number = DEFAULT_DURATION){\r\n        return this.Fader.fadeIn(duration);\r\n    }\r\n\r\n    fadeOut(duration:number = DEFAULT_DURATION){\r\n        return this.Fader.fadeOut(duration);\r\n    }\r\n\r\n    mask(){\r\n        return this.Fader.mask();\r\n    }\r\n\r\n}\r\n"]}