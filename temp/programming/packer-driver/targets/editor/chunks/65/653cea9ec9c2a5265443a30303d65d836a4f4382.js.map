{"version":3,"sources":["file:///E:/cocos_project/Cramed_of_death/assets/runtime/EventManager.ts"],"names":["EventManager","Singleton","eventDic","Map","Instance","GetInstance","on","eventName","func","ctx","has","get","push","set","off","index","findIndex","i","splice","emit","evenName","params","forEach","apply","clear"],"mappings":";;;yCAQqBA,Y;;;;;;;;;;;;;;AARdC,MAAAA,S;;;;;;;yBAQcD,Y,GAAN,MAAMA,YAAN;AAAA;AAAA,kCAAoC;AAAA;AAAA;AAAA,eAKvCE,QALuC,GAKA,IAAIC,GAAJ,EALA;AAAA;;AAC5B,mBAARC,QAAQ,GAAE;AACjB,iBAAO,MAAMC,WAAN,EAAP;AACH;;AAGD;AACJ;AAEI;AACAC,QAAAA,EAAE,CAACC,SAAD,EAAmBC,IAAnB,EAAkCC,GAAlC,EAA+C;AAC7C,cAAG,KAAKP,QAAL,CAAcQ,GAAd,CAAkBH,SAAlB,CAAH,EAAgC;AAC5B,iBAAKL,QAAL,CAAcS,GAAd,CAAkBJ,SAAlB,EAA6BK,IAA7B,CAAkC;AAACJ,cAAAA,IAAD;AAAOC,cAAAA;AAAP,aAAlC;AACH,WAFD,MAGI;AACA,iBAAKP,QAAL,CAAcW,GAAd,CAAkBN,SAAlB,EAA6B,CAAC;AAACC,cAAAA,IAAD;AAAOC,cAAAA;AAAP,aAAD,CAA7B;AACH;AACJ,SAjB8C,CAmB/C;;;AACAK,QAAAA,GAAG,CAACP,SAAD,EAAoBC,IAApB,EAAmC;AAClC,cAAG,KAAKN,QAAL,CAAcQ,GAAd,CAAkBH,SAAlB,CAAH,EAAgC;AAC5B,kBAAMQ,KAAK,GAAG,KAAKb,QAAL,CAAcS,GAAd,CAAkBJ,SAAlB,EAA6BS,SAA7B,CAAuCC,CAAC,IAAEA,CAAC,CAACT,IAAF,KAAWA,IAArD,CAAd,CAD4B,CAE5B;;AACAO,YAAAA,KAAK,GAAG,CAAC,CAAT,IAAc,KAAKb,QAAL,CAAcS,GAAd,CAAkBJ,SAAlB,EAA6BW,MAA7B,CAAoCH,KAApC,EAA2C,CAA3C,CAAd;AACH;AACJ,SA1B8C,CA4B/C;;;AACAI,QAAAA,IAAI,CAACC,QAAD,EAAmB,GAAGC,MAAtB,EAAwC;AACxC,cAAG,KAAKnB,QAAL,CAAcQ,GAAd,CAAkBU,QAAlB,CAAH,EAA+B;AAC3B,iBAAKlB,QAAL,CAAcS,GAAd,CAAkBS,QAAlB,EAA4BE,OAA5B,CAAoC,CAAC;AAACd,cAAAA,IAAD;AAAOC,cAAAA;AAAP,aAAD,KAAiB;AACjDA,cAAAA,GAAG,GAAGD,IAAI,CAACe,KAAL,CAAWd,GAAX,EAAgBY,MAAhB,CAAH,GAA6Bb,IAAI,CAAC,GAAGa,MAAJ,CAApC;AACH,aAFD;AAGH;AACJ,SAnC8C,CAqC/C;;;AACAG,QAAAA,KAAK,GAAE;AACH,eAAKtB,QAAL,CAAcsB,KAAd;AACH;;AAxC8C,O","sourcesContent":["import Singleton from \"../base/Singleton\";\r\n\r\n\r\ninterface IItem{\r\n    func: Function;\r\n    ctx: unknown;\r\n}\r\n\r\nexport default class EventManager extends Singleton{\r\n    static get Instance(){\r\n        return super.GetInstance<EventManager>();\r\n    }\r\n\r\n    private eventDic : Map<string, Array<IItem>> = new Map();\r\n    /*JS函数调用非常诡异，地址经常根据调用情况指到不一样的对象上\r\n    需要绑定上下文*/\r\n\r\n    //注册绑定，ctx上下文\r\n    on(eventName:string, func:Function, ctx?:unknown){\r\n        if(this.eventDic.has(eventName)){\r\n            this.eventDic.get(eventName).push({func, ctx});\r\n        }\r\n        else{\r\n            this.eventDic.set(eventName, [{func, ctx}]);\r\n        }\r\n    }\r\n\r\n    //解绑\r\n    off(eventName: string, func: Function){\r\n        if(this.eventDic.has(eventName)){\r\n            const index = this.eventDic.get(eventName).findIndex(i=>i.func === func);\r\n            //有点意思这写法，利用短路\r\n            index > -1 && this.eventDic.get(eventName).splice(index, 1);\r\n        }\r\n    }\r\n\r\n    //触发，补一下参数\r\n    emit(evenName: string, ...params: unknown[]){\r\n        if(this.eventDic.has(evenName)){\r\n            this.eventDic.get(evenName).forEach(({func, ctx}) => {\r\n                ctx ? func.apply(ctx, params) : func(...params);\r\n            })\r\n        }\r\n    }\r\n\r\n    //清空\r\n    clear(){\r\n        this.eventDic.clear();\r\n    }\r\n}\r\n"]}