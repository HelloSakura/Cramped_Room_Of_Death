{"version":3,"sources":["file:///E:/git/Cramped_Room_Of_Death/assets/scripts/burst/BurstManager.ts"],"names":["_decorator","UITransform","DIRECTION_ENUM","ENTITY_STATE_ENUM","EVENT_ENUM","EventManager","DataManager","EntityManager","BurstStateMachine","TILE_WIDTH","TILE_HEIGHT","ccclass","property","BurstManager","onDestroy","Instance","off","PLAYER_MOVE_END","_onBurst","init","params","fsm","addComponent","transform","getComponent","setContentSize","on","update","node","setPosition","x","y","state","DEATH","player","playerX","playerY","IDLE","ATTACK","emit","SCREEN_SHAKE","BOTTOM","ATTACK_PLAYER","AIRDEATH"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,W,OAAAA,W;;AACXC,MAAAA,c,iBAAAA,c;AAAgBC,MAAAA,iB,iBAAAA,iB;AAAqCC,MAAAA,U,iBAAAA,U;;AACxDC,MAAAA,Y;;AACAC,MAAAA,W;;AACEC,MAAAA,a,iBAAAA,a;;AACAC,MAAAA,iB,iBAAAA,iB;;AACAC,MAAAA,U,iBAAAA,U;AAAYC,MAAAA,W,iBAAAA,W;;;;;;;;;OACf;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBZ,U;;8BAMjBa,Y,WADZF,OAAO,CAAC,cAAD,C,gBAAR,MACaE,YADb;AAAA;AAAA,0CACgD;AAE5CC,QAAAA,SAAS,GAAS;AACd,gBAAMA,SAAN;AACA;AAAA;AAAA,4CAAaC,QAAb,CAAsBC,GAAtB,CAA0B;AAAA;AAAA,wCAAWC,eAArC,EAAsD,KAAKC,QAA3D;AACH;;AAES,cAAJC,IAAI,CAACC,MAAD,EAAQ;AACd;AACA,eAAKC,GAAL,GAAW,KAAKC,YAAL;AAAA;AAAA,qDAAX;AACA,gBAAM,KAAKD,GAAL,CAASF,IAAT,EAAN;AACA,gBAAMA,IAAN,CAAWC,MAAX,EAJc,CAKd;;AACA,gBAAMG,SAAS,GAAG,KAAKC,YAAL,CAAkBvB,WAAlB,CAAlB;AACAsB,UAAAA,SAAS,CAACE,cAAV;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA,4CAAaV,QAAb,CAAsBW,EAAtB,CAAyB;AAAA;AAAA,wCAAWT,eAApC,EAAqD,KAAKC,QAA1D,EAAoE,IAApE;AACH;;AAEDS,QAAAA,MAAM,GAAS;AACX;AACA,eAAKC,IAAL,CAAUC,WAAV,CAAsB,KAAKC,CAAL;AAAA;AAAA,uCAAtB,EAA2C,CAAC,KAAKC,CAAN;AAAA;AAAA,yCAA3C;AACH;;AAEOb,QAAAA,QAAQ,GAAE;AACd,cAAG,KAAKc,KAAL,KAAe;AAAA;AAAA,sDAAkBC,KAAjC,IAA0C,CAAC;AAAA;AAAA,0CAAYlB,QAAZ,CAAqBmB,MAAnE,EAA2E,OAD7D,CAGd;;AACA,gBAAM;AAACJ,YAAAA,CAAC,EAACK,OAAH;AAAYJ,YAAAA,CAAC,EAACK;AAAd,cAAyB;AAAA;AAAA,0CAAYrB,QAAZ,CAAqBmB,MAApD;;AACA,cAAG,KAAKJ,CAAL,KAAWK,OAAX,IAAsB,KAAKJ,CAAL,KAAWK,OAAjC,IAA4C,KAAKJ,KAAL,KAAe;AAAA;AAAA,sDAAkBK,IAAhF,EAAqF;AACjF,iBAAKL,KAAL,GAAa;AAAA;AAAA,wDAAkBM,MAA/B;AACH,WAFD,MAGK,IAAG,KAAKN,KAAL,KAAe;AAAA;AAAA,sDAAkBM,MAApC,EAA2C;AAC5C,iBAAKN,KAAL,GAAa;AAAA;AAAA,wDAAkBC,KAA/B;AACA;AAAA;AAAA,8CAAalB,QAAb,CAAsBwB,IAAtB,CAA2B;AAAA;AAAA,0CAAWC,YAAtC,EAAoD;AAAA;AAAA,kDAAeC,MAAnE;;AACA,gBAAG,KAAKX,CAAL,KAAWK,OAAX,IAAsB,KAAKJ,CAAL,KAAWK,OAApC,EAA4C;AACxC;AAAA;AAAA,gDAAarB,QAAb,CAAsBwB,IAAtB,CAA2B;AAAA;AAAA,4CAAWG,aAAtC,EAAqD;AAAA;AAAA,0DAAkBC,QAAvE;AACH;AACJ;AACJ;;AAtC2C,O","sourcesContent":["import { _decorator, UITransform } from 'cc';\r\nimport {  DIRECTION_ENUM, ENTITY_STATE_ENUM, ENTITY_TYPE_ENUM, EVENT_ENUM } from '../../enums';\r\nimport EventManager from '../../runtime/EventManager';\r\nimport DataManager from '../../runtime/DataManager';\r\nimport { EntityManager } from '../../base/EntityManager';\r\nimport { BurstStateMachine } from './BurstStateMachine';\r\nimport { TILE_WIDTH, TILE_HEIGHT } from '../tile/TileManger';\r\nconst { ccclass, property } = _decorator;\r\n\r\n\r\n\r\n\r\n@ccclass('BurstManager')\r\nexport class BurstManager extends EntityManager {\r\n    \r\n    onDestroy(): void {\r\n        super.onDestroy();\r\n        EventManager.Instance.off(EVENT_ENUM.PLAYER_MOVE_END, this._onBurst);  \r\n    }\r\n    \r\n    async init(params){   \r\n        //添加状态机\r\n        this.fsm = this.addComponent(BurstStateMachine);\r\n        await this.fsm.init();\r\n        super.init(params);\r\n        //改写父类对于瓦片大小的设定，burst只占一个瓦片大小\r\n        const transform = this.getComponent(UITransform);\r\n        transform.setContentSize(TILE_WIDTH, TILE_HEIGHT);\r\n        EventManager.Instance.on(EVENT_ENUM.PLAYER_MOVE_END, this._onBurst, this);     \r\n    }\r\n\r\n    update(): void {\r\n        //重写update，不需要做偏移\r\n        this.node.setPosition(this.x * TILE_WIDTH, -this.y * TILE_HEIGHT);\r\n    }\r\n    \r\n    private _onBurst(){\r\n        if(this.state === ENTITY_STATE_ENUM.DEATH || !DataManager.Instance.player) return;\r\n\r\n        //拿到玩家信息并判断坐标是否一致\r\n        const {x:playerX, y:playerY} = DataManager.Instance.player;\r\n        if(this.x === playerX && this.y === playerY && this.state === ENTITY_STATE_ENUM.IDLE){\r\n            this.state = ENTITY_STATE_ENUM.ATTACK;\r\n        }\r\n        else if(this.state === ENTITY_STATE_ENUM.ATTACK){\r\n            this.state = ENTITY_STATE_ENUM.DEATH;\r\n            EventManager.Instance.emit(EVENT_ENUM.SCREEN_SHAKE, DIRECTION_ENUM.BOTTOM);\r\n            if(this.x === playerX && this.y === playerY){\r\n                EventManager.Instance.emit(EVENT_ENUM.ATTACK_PLAYER, ENTITY_STATE_ENUM.AIRDEATH);\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\n"]}