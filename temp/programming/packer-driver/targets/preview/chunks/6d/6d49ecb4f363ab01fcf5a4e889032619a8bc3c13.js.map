{"version":3,"sources":["file:///E:/git/Cramped_Room_Of_Death/assets/scripts/burst/BurstStateMachine.ts"],"names":["_decorator","Animation","PARAMS_NAME_ENUM","getInitParamsNumber","getInitParamsTrigger","StateMachine","State","ccclass","property","BASE_URL","BurstStateMachine","init","animationComponent","addComponent","initParams","initStateMachine","initAnimationEvent","Promise","all","waitingList","params","set","IDLE","ATTACK","DIRECTION","DEATH","stateMachine","run","_currentState","get","value","currentState"],"mappings":"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","sourcesContent":["import { _decorator, AnimationClip, Animation, Component, SpriteFrame} from 'cc';\r\nimport { ENTITY_STATE_ENUM, FSM_PARAMS_TYPE_ENUM, PARAMS_NAME_ENUM } from '../../enums';\r\nimport { getInitParamsNumber, getInitParamsTrigger, StateMachine } from '../../base/StateMachine';\r\nimport State from '../../base/State';\r\n\r\n\r\nconst { ccclass, property } = _decorator;\r\n\r\nconst BASE_URL = \"texture/burst\"\r\n\r\n@ccclass('BurstStateMachine')\r\nexport class BurstStateMachine extends StateMachine {\r\n\r\n    async init(){\r\n        //添加animation组件\r\n        this.animationComponent = this.addComponent(Animation);\r\n\r\n        this.initParams();\r\n        this.initStateMachine();\r\n        //等待所有资源加载完毕，才结束init\r\n        this.initAnimationEvent();\r\n        await Promise.all(this.waitingList);\r\n    }\r\n\r\n    initParams(){\r\n        this.params.set(PARAMS_NAME_ENUM.IDLE, getInitParamsTrigger());\r\n        this.params.set(PARAMS_NAME_ENUM.ATTACK, getInitParamsTrigger());\r\n        this.params.set(PARAMS_NAME_ENUM.DIRECTION, getInitParamsNumber());\r\n        this.params.set(PARAMS_NAME_ENUM.DEATH, getInitParamsTrigger());\r\n    }\r\n\r\n    initStateMachine(){\r\n        this.stateMachine.set(PARAMS_NAME_ENUM.IDLE, new State(this, `${BASE_URL}/idle`));\r\n        this.stateMachine.set(PARAMS_NAME_ENUM.ATTACK, new State(this, `${BASE_URL}/attack`));\r\n        this.stateMachine.set(PARAMS_NAME_ENUM.DEATH, new State(this, `${BASE_URL}/death`));\r\n    }\r\n\r\n\r\n    initAnimationEvent(){\r\n        //注册动画播放结束事件，检测\r\n      \r\n    }\r\n\r\n\r\n    run(){\r\n        /*\r\n        1.判断一下当前是什么状态；\r\n        2.如果当前处于某个状态，接下来判断参数列表；\r\n        3.如果某个触发器处于触发状态，那么就需要进行状态的改变，就从对应状态机列表那里取到对应的\r\n            状态机，并设置当前状态为改变后的状态\r\n        4.使用set方式，可以在set里面调用当前状态的run方法走对应的逻辑\r\n\r\n         */\r\n        switch(this._currentState){\r\n            case this.stateMachine.get(PARAMS_NAME_ENUM.IDLE):\r\n            case this.stateMachine.get(PARAMS_NAME_ENUM.ATTACK):\r\n            case this.stateMachine.get(PARAMS_NAME_ENUM.DEATH):\r\n                if(this.params.get(PARAMS_NAME_ENUM.DEATH).value){\r\n                    this.currentState = this.stateMachine.get(PARAMS_NAME_ENUM.DEATH);\r\n                }\r\n                else if(this.params.get(PARAMS_NAME_ENUM.ATTACK).value){\r\n                    this.currentState = this.stateMachine.get(PARAMS_NAME_ENUM.ATTACK);\r\n                }\r\n                else if(this.params.get(PARAMS_NAME_ENUM.IDLE).value){\r\n                    this.currentState = this.stateMachine.get(PARAMS_NAME_ENUM.IDLE);\r\n                }\r\n                else{\r\n                    this.currentState = this.currentState;\r\n                }\r\n                break;\r\n            default:\r\n                this.currentState = this.stateMachine.get(PARAMS_NAME_ENUM.IDLE);\r\n        }\r\n    }\r\n}\r\n\r\n\r\n"]}