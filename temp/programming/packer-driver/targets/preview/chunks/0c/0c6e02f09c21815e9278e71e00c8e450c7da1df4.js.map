{"version":3,"sources":["file:///E:/git/Cramped_Room_Of_Death/assets/scripts/tile/TileMapManager.ts"],"names":["_decorator","Component","TileManger","createUINode","randomByRange","DataManager","ResourceManager","ccclass","property","TileMapManager","init","spriteFrames","Instance","loadDir","mapInfo","tileInfo","i","length","column","item","j","src","type","node","number","imageSrc","spriteFrame","find","v","name","tileManger","addComponent","setParent"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;;AAIZC,MAAAA,U,iBAAAA,U;;AACAC,MAAAA,Y,iBAAAA,Y;AAAcC,MAAAA,a,iBAAAA,a;;AAChBC,MAAAA,W;;AACAC,MAAAA,e;;;;;;;;;OAND;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBR,U,GAE9B;;gCASaS,c,WADZF,OAAO,CAAC,gBAAD,C,gBAAR,MACaE,cADb,SACoCR,SADpC,CAC8C;AACpCS,QAAAA,IAAI,GAAE;AAAA;;AAAA;AACR,gBAAMC,YAAY,SAAS;AAAA;AAAA,oDAAgBC,QAAhB,CAAyBC,OAAzB,CAAiC,mBAAjC,CAA3B;AACA,gBAAM;AAACC,cAAAA;AAAD,gBAAY;AAAA;AAAA,4CAAYF,QAA9B;AACA;AAAA;AAAA,4CAAYA,QAAZ,CAAqBG,QAArB,GAAgC,EAAhC,CAHQ,CAIR;;AACA,iBAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,OAAO,CAACG,MAA5B,EAAoCD,CAAC,EAArC,EAAyC;AACrC,kBAAME,MAAM,GAAGJ,OAAO,CAACE,CAAD,CAAtB;AACA;AAAA;AAAA,8CAAYJ,QAAZ,CAAqBG,QAArB,CAA8BC,CAA9B,IAAmC,EAAnC;;AAFqC,4CAGG;AACpC,oBAAMG,IAAI,GAAGD,MAAM,CAACE,CAAD,CAAnB,CADoC,CAEpC;;AACA,oBAAGD,IAAI,CAACE,GAAL,KAAa,IAAb,IAAqBF,IAAI,CAACG,IAAL,KAAc,IAAtC,EAA2C;AAAA;AAE1C;;AAED,oBAAMC,IAAI,GAAG;AAAA;AAAA,mDAAb,CAPoC,CASpC;;AACA,oBAAIC,MAAM,GAAGL,IAAI,CAACE,GAAlB;;AACA,oBAAG,CAACG,MAAM,KAAK,CAAX,IAAgBA,MAAM,KAAK,CAA3B,IAAgCA,MAAM,KAAK,CAA5C,KAAkDR,CAAC,GAAC,CAAF,KAAQ,CAA1D,IAA+DI,CAAC,GAAC,CAAF,KAAQ,CAA1E,EAA4E;AACxEI,kBAAAA,MAAM,IAAI;AAAA;AAAA,sDAAc,CAAd,EAAiB,CAAjB,CAAV;AACH;;AACD,oBAAMC,QAAQ,cAAYD,MAAZ,MAAd;AAEA,oBAAME,WAAW,GAAGf,YAAY,CAACgB,IAAb,CAAkBC,CAAC,IAAIA,CAAC,CAACC,IAAF,KAAWJ,QAAlC,KAA+Cd,YAAY,CAAC,CAAD,CAA/E,CAhBoC,CAkBpC;;AACA,oBAAMmB,UAAU,GAAGP,IAAI,CAACQ,YAAL;AAAA;AAAA,6CAAnB;AACA,oBAAMT,IAAI,GAAGH,IAAI,CAACG,IAAlB;AACAQ,gBAAAA,UAAU,CAACpB,IAAX,CAAgBY,IAAhB,EAAsBI,WAAtB,EAAmCV,CAAnC,EAAsCI,CAAtC;AACA;AAAA;AAAA,gDAAYR,QAAZ,CAAqBG,QAArB,CAA8BC,CAA9B,EAAiCI,CAAjC,IAAsCU,UAAtC;AACAP,gBAAAA,IAAI,CAACS,SAAL,CAAe,KAAI,CAACT,IAApB;AAEA;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGa,eA1CoC;;AAGrC,mBAAK,IAAIH,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,MAAM,CAACD,MAA3B,EAAmCG,CAAC,EAApC;AAAA,oCAIQ;AAJR;AAyCH;AAjDO;AAkDX;;AAnDyC,O","sourcesContent":["import { _decorator, Component, random, resources, SpriteFrame} from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n\r\n//导入瓦片信息\r\nimport { TileManger } from './TileManger';\r\nimport { createUINode, randomByRange } from '../../utils';\r\nimport DataManager from '../../runtime/DataManager';\r\nimport ResourceManager from '../../runtime/ResourceManager';\r\n\r\n\r\n\r\n@ccclass('TileMapManager')\r\nexport class TileMapManager extends Component {\r\n    async init(){\r\n        const spriteFrames = await ResourceManager.Instance.loadDir(\"texture/tile/tile\");\r\n        const {mapInfo} = DataManager.Instance;\r\n        DataManager.Instance.tileInfo = [];\r\n        //console.log(spriteFrames);\r\n        for (let i = 0; i < mapInfo.length; i++) {\r\n            const column = mapInfo[i];\r\n            DataManager.Instance.tileInfo[i] = [];\r\n            for (let j = 0; j < column.length; j++) {\r\n                const item = column[j];\r\n                //空值跳过\r\n                if(item.src === null || item.type === null){\r\n                    continue;\r\n                }\r\n\r\n                const node = createUINode();\r\n\r\n                //随机地板\r\n                let number = item.src;\r\n                if((number === 1 || number === 5 || number === 9) && i%2 === 0 && j%2 === 0){\r\n                    number += randomByRange(0, 4);\r\n                }\r\n                const imageSrc = `tile (${number})`;\r\n\r\n                const spriteFrame = spriteFrames.find(v => v.name === imageSrc) || spriteFrames[0];\r\n                \r\n                //添加瓦片管理类，主要是之前太难看得封装一下\r\n                const tileManger = node.addComponent(TileManger);\r\n                const type = item.type;\r\n                tileManger.init(type, spriteFrame, i, j);\r\n                DataManager.Instance.tileInfo[i][j] = tileManger;\r\n                node.setParent(this.node);\r\n\r\n                /*封装以下到TileManager类\r\n                //添加UI组件定义大小\r\n                const node = new Node();\r\n                const transform = node.addComponent(UITransform);\r\n                transform.setContentSize(TILE_WIDTH, TILE_HEIGHT);\r\n\r\n                //设置layer\r\n                node.layer = 1 << Layers.nameToLayer(\"UI_2D\");\r\n\r\n                //设置位置\r\n                node.setPosition(i*TILE_WIDTH, -j*TILE_HEIGHT);\r\n                //挂载到父节点\r\n                node.setParent(this.node);\r\n                */\r\n            }\r\n            \r\n        }\r\n    }\r\n}\r\n\r\n\r\n"]}