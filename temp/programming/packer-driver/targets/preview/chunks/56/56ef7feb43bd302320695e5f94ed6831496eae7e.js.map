{"version":3,"sources":["file:///E:/cocos_project/Cramed_of_death/assets/base/StateMachine.ts"],"names":["_decorator","Component","FSM_PARAMS_TYPE_ENUM","ccclass","property","getInitParamsTrigger","type","TRIGGER","value","getInitParamsNumber","NUMBER","StateMachine","_currentState","params","Map","stateMachine","animationComponent","waitingList","currentState","newState","run","resetTrigger","_","getParams","paramsName","has","get","setParams"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAsCC,MAAAA,S,OAAAA,S;;AACtCC,MAAAA,oB,iBAAAA,oB;;;;;;;;;OAGH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBJ,U,GAE9B;;sCAQaK,oB,GAAuB,MAAI;AACpC,eAAO;AACHC,UAAAA,IAAI,EAAE;AAAA;AAAA,4DAAqBC,OADxB;AAEHC,UAAAA,KAAK,EAAE;AAFJ,SAAP;AAIH,O;;qCAEYC,mB,GAAsB,MAAI;AACnC,eAAO;AACHH,UAAAA,IAAI,EAAE;AAAA;AAAA,4DAAqBI,MADxB;AAEHF,UAAAA,KAAK,EAAE;AAFJ,SAAP;AAIH,O;;8BAGqBG,Y,WADrBR,OAAO,CAAC,cAAD,C,gBAAR,MACsBQ,YADtB,SAC2CV,SAD3C,CACqD;AAAA;AAAA;AACjD;AADiD,eAEvCW,aAFuC,GAEG,IAFH;AAIjD;AAJiD,eAKjDC,MALiD,GAKd,IAAIC,GAAJ,EALc;AAAA,eAMjDC,YANiD,GAMG,IAAID,GAAJ,EANH;AAQjD;AARiD,eASjDE,kBATiD;AAWjD;AAXiD,eAYjDC,WAZiD,GAYL,EAZK;AAAA;;AAcjD;AACgB,YAAZC,YAAY,GAAE;AACd,iBAAO,KAAKN,aAAZ;AACH,SAjBgD,CAmBjD;;;AACgB,YAAZM,YAAY,CAACC,QAAD,EAAU;AACtB,eAAKP,aAAL,GAAqBO,QAArB;;AACA,eAAKP,aAAL,CAAmBQ,GAAnB;AACH;;AAEDC,QAAAA,YAAY,GAAE;AACV,eAAI,IAAM,CAACC,CAAD,EAAId,KAAJ,CAAV,IAAwB,KAAKK,MAA7B,EAAoC;AAChC,gBAAGL,KAAK,CAACF,IAAN,KAAe;AAAA;AAAA,8DAAqBC,OAAvC,EAA+C;AAC3CC,cAAAA,KAAK,CAACA,KAAN,GAAc,KAAd,CAD2C,CACnB;AAC3B;AACJ;AACJ;;AAEDe,QAAAA,SAAS,CAACC,UAAD,EAAoB;AACzB,cAAG,KAAKX,MAAL,CAAYY,GAAZ,CAAgBD,UAAhB,CAAH,EAA+B;AAC3B,mBAAO,KAAKX,MAAL,CAAYa,GAAZ,CAAgBF,UAAhB,EAA4BhB,KAAnC;AACH;AACJ;;AAEDmB,QAAAA,SAAS,CAACH,UAAD,EAAqBhB,KAArB,EAA4C;AACjD,cAAG,KAAKK,MAAL,CAAYY,GAAZ,CAAgBD,UAAhB,CAAH,EAA+B;AAC3B,iBAAKX,MAAL,CAAYa,GAAZ,CAAgBF,UAAhB,EAA4BhB,KAA5B,GAAoCA,KAApC;AACA,iBAAKY,GAAL;AACA,iBAAKC,YAAL;AACH;AACJ;;AA7CgD,O","sourcesContent":["import { _decorator, AnimationClip, Animation, Component, SpriteFrame} from 'cc';\r\nimport { FSM_PARAMS_TYPE_ENUM } from '../enums';\r\nimport State from './State';\r\nimport { SubStateMachine } from './SubStateMachine';\r\nconst { ccclass, property } = _decorator;\r\n\r\n//参数值类型\r\ntype ParamsValueType = boolean | number;\r\n\r\nexport interface IParamsValue{\r\n    type: FSM_PARAMS_TYPE_ENUM,\r\n    value: ParamsValueType\r\n}\r\n\r\nexport const getInitParamsTrigger = ()=>{\r\n    return {\r\n        type: FSM_PARAMS_TYPE_ENUM.TRIGGER,\r\n        value: false\r\n    }\r\n}\r\n\r\nexport const getInitParamsNumber = ()=>{\r\n    return {\r\n        type: FSM_PARAMS_TYPE_ENUM.NUMBER,\r\n        value: 0\r\n    }\r\n}\r\n\r\n@ccclass('StateMachine')\r\nexport abstract class StateMachine extends Component {\r\n    //当前状态\r\n    protected _currentState : State | SubStateMachine = null;\r\n\r\n    //需要一个参数列表和状态机列表\r\n    params:Map<string, IParamsValue> = new Map();\r\n    stateMachine:Map<string, State | SubStateMachine> = new Map();\r\n\r\n    //动画组件\r\n    animationComponent:Animation;\r\n\r\n    //保证资源加载数组\r\n    waitingList:Array<Promise<SpriteFrame[]>> = [];\r\n\r\n    //get\r\n    get currentState(){\r\n        return this._currentState;\r\n    }\r\n\r\n    //set\r\n    set currentState(newState){\r\n        this._currentState = newState;\r\n        this._currentState.run();\r\n    }\r\n\r\n    resetTrigger(){\r\n        for(const [_, value] of this.params){\r\n            if(value.type === FSM_PARAMS_TYPE_ENUM.TRIGGER){\r\n                value.value = false;    //动画系统trigger触发后需要重置清空\r\n            }\r\n        }\r\n    }\r\n\r\n    getParams(paramsName: string){\r\n        if(this.params.has(paramsName)){\r\n            return this.params.get(paramsName).value;\r\n        }\r\n    }\r\n\r\n    setParams(paramsName: string, value: ParamsValueType){\r\n        if(this.params.has(paramsName)){\r\n            this.params.get(paramsName).value = value;\r\n            this.run();\r\n            this.resetTrigger();\r\n        }\r\n    }\r\n\r\n\r\n    abstract init():void;\r\n    abstract run():void;\r\n}\r\n\r\n\r\n"]}