{"version":3,"sources":["file:///G:/github/Cramped_Room_Of_Death/assets/scripts/player/PlayerManager.ts"],"names":["_decorator","CONTROLLER_ENUM","DIRECTION_ENUM","ENTITY_STATE_ENUM","ENTITY_TYPE_ENUM","EVENT_ENUM","EventManager","PlayerStateMachine","EntityManager","DataManager","ccclass","property","PlayerManager","targetX","targetY","_speed","_isMoving","init","fsm","addComponent","x","y","type","PLAYER","direction","TOP","state","IDLE","Instance","on","PLAYER_CTRL","inputHandle","ATTACK_PLAYER","_onDead","update","updateXY","Math","abs","emit","PLAYER_MOVE_END","inputDirection","DEATH","AIRDEATH","willBlock","console","log","move","BOTTOM","RIGHT","LEFT","TURNLEFT","TURNRIGHT","tileInfo","playerNextY","weaponNextY","BLOCKFRONT","playerTile","weaponTile","moveable","turnable","weaponNextX","BLOCKLEFT","BLOCKBACK","BLOCKRIGHT","playerNextX","nextX","nextY","BLOCKTURNLEFT","BLOCKTURNRIGHT"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;;AAGAC,MAAAA,e,iBAAAA,e;AAAiBC,MAAAA,c,iBAAAA,c;AAAsCC,MAAAA,iB,iBAAAA,iB;AAAmBC,MAAAA,gB,iBAAAA,gB;AAAkBC,MAAAA,U,iBAAAA,U;;AAC9FC,MAAAA,Y;;AACEC,MAAAA,kB,iBAAAA,kB;;AACAC,MAAAA,a,iBAAAA,a;;AACFC,MAAAA,W;;;;;;;;;OACD;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBX,U;;+BAMjBY,a,WADZF,OAAO,CAAC,eAAD,C,gBAAR,MACaE,aADb;AAAA;AAAA,0CACiD;AAAA;AAAA;AAAA,eAE7CC,OAF6C,GAE5B,CAF4B;AAAA,eAG7CC,OAH6C,GAG5B,CAH4B;AAAA,eAI3BC,MAJ2B,GAIlB,IAAE,EAJgB;AAAA,eAKrCC,SALqC,GAKjB,KALiB;AAAA;;AAQvCC,QAAAA,IAAI,GAAE;AAAA;AAAA;;AAAA;AACR;AACA,YAAA,KAAI,CAACC,GAAL,GAAW,KAAI,CAACC,YAAL;AAAA;AAAA,yDAAX;AACA,kBAAM,KAAI,CAACD,GAAL,CAASD,IAAT,EAAN;;AACA,6CAAW;AACPG,cAAAA,CAAC,EAAC,CADK;AAEPC,cAAAA,CAAC,EAAC,CAFK;AAGPC,cAAAA,IAAI,EAAE;AAAA;AAAA,wDAAiBC,MAHhB;AAIPC,cAAAA,SAAS,EAAC;AAAA;AAAA,oDAAeC,GAJlB;AAKPC,cAAAA,KAAK,EAAC;AAAA;AAAA,0DAAkBC;AALjB,aAAX;;AAQA,YAAA,KAAI,CAACd,OAAL,GAAe,KAAI,CAACO,CAApB;AACA,YAAA,KAAI,CAACN,OAAL,GAAe,KAAI,CAACO,CAApB,CAbQ,CAeR;AACA;;AACA;AAAA;AAAA,8CAAaO,QAAb,CAAsBC,EAAtB,CAAyB;AAAA;AAAA,0CAAWC,WAApC,EAAiD,KAAI,CAACC,WAAtD,EAAmE,KAAnE;AACA;AAAA;AAAA,8CAAaH,QAAb,CAAsBC,EAAtB,CAAyB;AAAA;AAAA,0CAAWG,aAApC,EAAmD,KAAI,CAACC,OAAxD,EAAiE,KAAjE;AAlBQ;AAmBX;;AAEDC,QAAAA,MAAM,GAAE;AACJ,eAAKC,QAAL,GADI,CAEJ;AACA;AACA;;AACA,gBAAMD,MAAN;AACH;;AAEDC,QAAAA,QAAQ,GAAE;AACN,cAAG,KAAKtB,OAAL,GAAe,KAAKO,CAAvB,EAAyB;AAAG;AACxB,iBAAKA,CAAL,IAAU,KAAKL,MAAf,CADqB,CACG;AAC3B,WAFD,MAGK,IAAG,KAAKF,OAAL,GAAe,KAAKO,CAAvB,EAAyB;AAC1B,iBAAKA,CAAL,IAAU,KAAKL,MAAf;AACH;;AAED,cAAG,KAAKD,OAAL,GAAe,KAAKO,CAAvB,EAAyB;AAAG;AACxB,iBAAKA,CAAL,IAAU,KAAKN,MAAf,CADqB,CACG;AAC3B,WAFD,MAGK,IAAG,KAAKD,OAAL,GAAe,KAAKO,CAAvB,EAAyB;AAC1B,iBAAKA,CAAL,IAAU,KAAKN,MAAf;AACH,WAbK,CAeN;;;AACA,cAAGqB,IAAI,CAACC,GAAL,CAAS,KAAKxB,OAAL,GAAe,KAAKO,CAA7B,KAAmC,GAAnC,IAA0CgB,IAAI,CAACC,GAAL,CAAS,KAAKvB,OAAL,GAAe,KAAKO,CAA7B,KAAmC,GAA7E,IAAoF,KAAKL,SAA5F,EAAsG;AAClG,iBAAKA,SAAL,GAAiB,KAAjB;AACA,iBAAKI,CAAL,GAAS,KAAKP,OAAd;AACA,iBAAKQ,CAAL,GAAS,KAAKP,OAAd;AACA;AAAA;AAAA,8CAAac,QAAb,CAAsBU,IAAtB,CAA2B;AAAA;AAAA,0CAAWC,eAAtC;AACH;AACJ,SA3D4C,CA8D7C;;;AACAR,QAAAA,WAAW,CAACS,cAAD,EAAiC;AACxC;AACA,cAAG,KAAKxB,SAAR,EAAkB;AACd;AACH,WAJuC,CAKxC;;;AACA,cAAG,KAAKU,KAAL,KAAe;AAAA;AAAA,sDAAkBe,KAAjC,IAA0C,KAAKf,KAAL,KAAe;AAAA;AAAA,sDAAkBgB,QAA9E,EAAuF;AACnF;AACH,WARuC,CASxC;;;AACA,cAAG,KAAKC,SAAL,CAAeH,cAAf,CAAH,EAAkC;AAC9BI,YAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACA;AACH;;AACD,eAAKC,IAAL,CAAUN,cAAV;AAEH;;AAIDM,QAAAA,IAAI,CAACN,cAAD,EAAiC;AAEjC;AACA;AACA,cAAGA,cAAc,KAAK;AAAA;AAAA,kDAAgBf,GAAtC,EAA0C;AACtC,iBAAKX,OAAL,IAAe,CAAf;AACA,iBAAKE,SAAL,GAAiB,IAAjB;AACH,WAHD,MAIK,IAAGwB,cAAc,KAAK;AAAA;AAAA,kDAAgBO,MAAtC,EAA6C;AAC9C,iBAAKjC,OAAL,IAAe,CAAf;AACA,iBAAKE,SAAL,GAAiB,IAAjB;AACH,WAHI,MAIA,IAAGwB,cAAc,KAAK;AAAA;AAAA,kDAAgBQ,KAAtC,EAA4C;AAC7C,iBAAKnC,OAAL,IAAe,CAAf;AACA,iBAAKG,SAAL,GAAiB,IAAjB;AACH,WAHI,MAIA,IAAGwB,cAAc,KAAK;AAAA;AAAA,kDAAgBS,IAAtC,EAA2C;AAC5C,iBAAKpC,OAAL,IAAe,CAAf;AACA,iBAAKG,SAAL,GAAiB,IAAjB;AACH,WAHI,MAIA,IAAGwB,cAAc,KAAK;AAAA;AAAA,kDAAgBU,QAAtC,EAA+C;AAChD;AACA;AACA,gBAAG,KAAK1B,SAAL,KAAmB;AAAA;AAAA,kDAAeC,GAArC,EAAyC;AACrC,mBAAKD,SAAL,GAAiB;AAAA;AAAA,oDAAeyB,IAAhC;AACH,aAFD,MAGK,IAAG,KAAKzB,SAAL,KAAmB;AAAA;AAAA,kDAAeyB,IAArC,EAA0C;AAC3C,mBAAKzB,SAAL,GAAiB;AAAA;AAAA,oDAAeuB,MAAhC;AACH,aAFI,MAGA,IAAG,KAAKvB,SAAL,KAAmB;AAAA;AAAA,kDAAeuB,MAArC,EAA4C;AAC7C,mBAAKvB,SAAL,GAAiB;AAAA;AAAA,oDAAewB,KAAhC;AACH,aAFI,MAGA,IAAG,KAAKxB,SAAL,KAAmB;AAAA;AAAA,kDAAewB,KAArC,EAA2C;AAC5C,mBAAKxB,SAAL,GAAiB;AAAA;AAAA,oDAAeC,GAAhC;AACH;;AACD,iBAAKC,KAAL,GAAa;AAAA;AAAA,wDAAkBwB,QAA/B;AACA;AAAA;AAAA,8CAAatB,QAAb,CAAsBU,IAAtB,CAA2B;AAAA;AAAA,0CAAWC,eAAtC;AACH,WAjBI,MAkBA,IAAGC,cAAc,KAAK;AAAA;AAAA,kDAAgBW,SAAtC,EAAgD;AACjD,gBAAG,KAAK3B,SAAL,KAAmB;AAAA;AAAA,kDAAeC,GAArC,EAAyC;AACrC,mBAAKD,SAAL,GAAiB;AAAA;AAAA,oDAAewB,KAAhC;AACH,aAFD,MAGK,IAAG,KAAKxB,SAAL,KAAmB;AAAA;AAAA,kDAAewB,KAArC,EAA2C;AAC5C,mBAAKxB,SAAL,GAAiB;AAAA;AAAA,oDAAeuB,MAAhC;AACH,aAFI,MAGA,IAAG,KAAKvB,SAAL,KAAmB;AAAA;AAAA,kDAAeuB,MAArC,EAA4C;AAC7C,mBAAKvB,SAAL,GAAiB;AAAA;AAAA,oDAAeyB,IAAhC;AACH,aAFI,MAGA,IAAG,KAAKzB,SAAL,KAAmB;AAAA;AAAA,kDAAeyB,IAArC,EAA0C;AAC3C,mBAAKzB,SAAL,GAAiB;AAAA;AAAA,oDAAeC,GAAhC;AACH;;AACD,iBAAKC,KAAL,GAAa;AAAA;AAAA,wDAAkByB,SAA/B;AACA;AAAA;AAAA,8CAAavB,QAAb,CAAsBU,IAAtB,CAA2B;AAAA;AAAA,0CAAWC,eAAtC;AACH;AACJ,SAzI4C,CA4I7C;;;AACAI,QAAAA,SAAS,CAACH,cAAD,EAAyC;AAC9C;AACA,cAAM;AAAC3B,YAAAA,OAAO,EAACO,CAAT;AAAYN,YAAAA,OAAO,EAACO,CAApB;AAAuBG,YAAAA;AAAvB,cAAoC,IAA1C,CAF8C,CAG9C;;AACA,cAAM;AAAC4B,YAAAA;AAAD,cAAa;AAAA;AAAA,0CAAYxB,QAA/B;;AAGA,cAAGY,cAAc,KAAK;AAAA;AAAA,kDAAgBf,GAAtC,EAA0C;AACtC;AACA,gBAAGD,SAAS,KAAK;AAAA;AAAA,kDAAeC,GAAhC,EAAoC;AAChC;AACA;AACA,kBAAM4B,WAAW,GAAGhC,CAAC,GAAG,CAAxB;AACA,kBAAMiC,WAAW,GAAGjC,CAAC,GAAG,CAAxB,CAJgC,CAKhC;;AACA,kBAAGgC,WAAW,GAAG,CAAjB,EAAmB;AACf,qBAAK3B,KAAL,GAAa;AAAA;AAAA,4DAAkB6B,UAA/B;AACA,uBAAO,IAAP;AACH,eAT+B,CAWhC;;;AACA,kBAAMC,UAAU,GAAGJ,QAAQ,CAAChC,CAAD,CAAR,CAAYiC,WAAZ,CAAnB;AACA,kBAAMI,UAAU,GAAGL,QAAQ,CAAChC,CAAD,CAAR,CAAYkC,WAAZ,CAAnB;;AAEA,kBAAGE,UAAU,IAAIA,UAAU,CAACE,QAAzB,KAAsC,CAACD,UAAD,IAAeA,UAAU,CAACE,QAAhE,CAAH,EAA6E,CACzE;AACA;AACH,eAHD,MAII;AACA,qBAAKjC,KAAL,GAAa;AAAA;AAAA,4DAAkB6B,UAA/B;AACA,uBAAO,IAAP;AACH;AAEJ,aAxBD,MAyBK,IAAG/B,SAAS,KAAK;AAAA;AAAA,kDAAeyB,IAAhC,EAAqC;AACtC;AACA;AACA,kBAAII,YAAW,GAAGhC,CAAC,GAAG,CAAtB;;AACA,kBAAIuC,WAAW,GAAGxC,CAAC,GAAG,CAAtB;;AACA,kBAAGiC,YAAW,GAAG,CAAjB,EAAmB;AACf,qBAAK3B,KAAL,GAAa;AAAA;AAAA,4DAAkBmC,SAA/B;AACA;AACH,eARqC,CAUtC;AACA;;;AACA,kBAAML,WAAU,GAAGJ,QAAQ,CAAChC,CAAD,CAAR,CAAYiC,YAAZ,CAAnB;AACA,kBAAMI,WAAU,GAAGL,QAAQ,CAACQ,WAAD,CAAR,CAAsBP,YAAtB,CAAnB;;AAEA,kBAAGG,WAAU,IAAIA,WAAU,CAACE,QAAzB,KAAsC,CAACD,WAAD,IAAeA,WAAU,CAACE,QAAhE,CAAH,EAA6E,CACzE;AACA;AAGH,eALD,MAMI;AACA;AACA,qBAAKjC,KAAL,GAAa;AAAA;AAAA,4DAAkBmC,SAA/B;AACA,uBAAO,IAAP;AACH;AAGJ,aA5BI,MA6BA,IAAGrC,SAAS,KAAK;AAAA;AAAA,kDAAeuB,MAAhC,EAAuC;AACxC;AACA;AACA,kBAAMM,aAAW,GAAGhC,CAAC,GAAG,CAAxB;;AACA,kBAAGgC,aAAW,GAAG,CAAjB,EAAmB;AACf,qBAAK3B,KAAL,GAAa;AAAA;AAAA,4DAAkBoC,SAA/B;AACA;AACH,eAPuC,CAQxC;;;AACA,kBAAMN,YAAU,GAAGJ,QAAQ,CAAChC,CAAD,CAAR,CAAYiC,aAAZ,CAAnB;;AACA,kBAAGG,YAAU,IAAIA,YAAU,CAACE,QAA5B,EAAqC,CACjC;AACH,eAFD,MAGI;AACA,qBAAKhC,KAAL,GAAa;AAAA;AAAA,4DAAkBoC,SAA/B;AACA,uBAAO,IAAP;AACH;AACJ,aAjBI,MAkBA,IAAGtC,SAAS,KAAK;AAAA;AAAA,kDAAewB,KAAhC,EAAsC;AACvC;AACA;AACA,kBAAIK,aAAW,GAAGhC,CAAC,GAAG,CAAtB;;AACA,kBAAIuC,YAAW,GAAGxC,CAAC,GAAG,CAAtB;;AAEA,kBAAGiC,aAAW,GAAG,CAAjB,EAAmB;AACf,qBAAK3B,KAAL,GAAa;AAAA;AAAA,4DAAkBqC,UAA/B;AACA;AACH;;AACD,kBAAMP,YAAU,GAAGJ,QAAQ,CAAChC,CAAD,CAAR,CAAYiC,aAAZ,CAAnB;AACA,kBAAMI,YAAU,GAAGL,QAAQ,CAACQ,YAAD,CAAR,CAAsBP,aAAtB,CAAnB;;AACA,kBAAGG,YAAU,IAAIA,YAAU,CAACE,QAAzB,KAAsC,CAACD,YAAD,IAAeA,YAAU,CAACC,QAAhE,CAAH,EAA6E,CACzE;AACA;AAEH,eAJD,MAKI;AACA,qBAAKhC,KAAL,GAAa;AAAA;AAAA,4DAAkBqC,UAA/B;AACA,uBAAO,IAAP;AACH;AAEJ;AACJ,WAjGD,MAkGK,IAAGvB,cAAc,KAAK;AAAA;AAAA,kDAAgBS,IAAtC,EAA2C;AAC5C;AACA,gBAAGzB,SAAS,KAAK;AAAA;AAAA,kDAAeC,GAAhC,EAAoC;AAChC;AACA,kBAAMuC,WAAW,GAAG5C,CAAC,GAAG,CAAxB;;AACA,kBAAMkC,YAAW,GAAGjC,CAAC,GAAG,CAAxB;;AAEA,kBAAG2C,WAAW,GAAG,CAAjB,EAAmB;AACf,qBAAKtC,KAAL,GAAa;AAAA;AAAA,4DAAkB6B,UAA/B;AACA;AACH;;AACD,kBAAMC,YAAU,GAAGJ,QAAQ,CAACY,WAAD,CAAR,CAAsB3C,CAAtB,CAAnB;AACA,kBAAMoC,YAAU,GAAGL,QAAQ,CAACY,WAAD,CAAR,CAAsBV,YAAtB,CAAnB;;AACA,kBAAGE,YAAU,IAAIA,YAAU,CAACE,QAAzB,KAAsC,CAACD,YAAD,IAAeA,YAAU,CAACC,QAAhE,CAAH,EAA6E,CACzE;AACA;AACH,eAHD,MAII;AACA,qBAAKhC,KAAL,GAAa;AAAA;AAAA,4DAAkB6B,UAA/B;AACA,uBAAO,IAAP;AACH;AAEJ,aApBD,MAqBK,IAAG/B,SAAS,KAAK;AAAA;AAAA,kDAAeyB,IAAhC,EAAqC;AACtC;AACA,kBAAMe,YAAW,GAAG5C,CAAC,GAAG,CAAxB;;AACA,kBAAMwC,aAAW,GAAGxC,CAAC,GAAG,CAAxB;;AAEA,kBAAG4C,YAAW,GAAG,CAAjB,EAAmB;AACf,qBAAKtC,KAAL,GAAa;AAAA;AAAA,4DAAkBmC,SAA/B;AACA;AACH;;AAED,kBAAML,YAAU,GAAGJ,QAAQ,CAACY,YAAD,CAAR,CAAsB3C,CAAtB,CAAnB;AACA,kBAAMoC,YAAU,GAAGL,QAAQ,CAACQ,aAAD,CAAR,CAAsBvC,CAAtB,CAAnB;;AAEA,kBAAGmC,YAAU,IAAIA,YAAU,CAACE,QAAzB,KAAsC,CAACD,YAAD,IAAeA,YAAU,CAACC,QAAhE,CAAH,EAA6E,CAE5E,CAFD,MAGI;AACA,qBAAKhC,KAAL,GAAa;AAAA;AAAA,4DAAkBmC,SAA/B;AACA,uBAAO,IAAP;AACH;AAEJ,aArBI,MAsBA,IAAGrC,SAAS,KAAK;AAAA;AAAA,kDAAeuB,MAAhC,EAAuC;AACxC;AACA,kBAAMiB,aAAW,GAAG5C,CAAC,GAAG,CAAxB;;AACA,kBAAMkC,aAAW,GAAGjC,CAAC,GAAG,CAAxB;;AAEA,kBAAG2C,aAAW,GAAG,CAAjB,EAAmB;AACf,qBAAKtC,KAAL,GAAa;AAAA;AAAA,4DAAkBoC,SAA/B;AACA;AACH;;AAED,kBAAMN,YAAU,GAAGJ,QAAQ,CAACY,aAAD,CAAR,CAAsB3C,CAAtB,CAAnB;AACA,kBAAMoC,YAAU,GAAGL,QAAQ,CAACY,aAAD,CAAR,CAAsBV,aAAtB,CAAnB;;AACA,kBAAGE,YAAU,IAAIA,YAAU,CAACE,QAAzB,KAAsC,CAACD,YAAD,IAAeA,YAAU,CAACC,QAAhE,CAAH,EAA6E,CAE5E,CAFD,MAGI;AACA,qBAAKhC,KAAL,GAAa;AAAA;AAAA,4DAAkBoC,SAA/B;AACA,uBAAO,IAAP;AACH;AAGJ,aArBI,MAsBA,IAAGtC,SAAS,KAAK;AAAA;AAAA,kDAAewB,KAAhC,EAAsC;AACvC;AACA,kBAAMgB,aAAW,GAAG5C,CAAC,GAAG,CAAxB;;AACA,kBAAG4C,aAAW,GAAG,CAAjB,EAAmB;AACf,qBAAKtC,KAAL,GAAa;AAAA;AAAA,4DAAkBqC,UAA/B;AACA;AACH;;AAED,kBAAMP,YAAU,GAAGJ,QAAQ,CAACY,aAAD,CAAR,CAAsB3C,CAAtB,CAAnB;;AAEA,kBAAGmC,YAAU,IAAIA,YAAU,CAACE,QAA5B,EAAqC,CAEpC,CAFD,MAGI;AACA,qBAAKhC,KAAL,GAAa;AAAA;AAAA,4DAAkBqC,UAA/B;AACA,uBAAO,IAAP;AACH;AACJ;AACJ,WArFI,MAsFA,IAAGvB,cAAc,KAAK;AAAA;AAAA,kDAAgBO,MAAtC,EAA6C;AAC9C;AACA,gBAAGvB,SAAS,KAAK;AAAA;AAAA,kDAAeC,GAAhC,EAAoC;AAChC;AACA,kBAAM4B,aAAW,GAAGhC,CAAC,GAAG,CAAxB;;AACA,kBAAGgC,aAAW,GAAG,CAAjB,EAAmB;AACf,qBAAK3B,KAAL,GAAa;AAAA;AAAA,4DAAkB6B,UAA/B;AACA;AACH;;AAED,kBAAMC,YAAU,GAAGJ,QAAQ,CAAChC,CAAD,CAAR,CAAYiC,aAAZ,CAAnB;;AACA,kBAAGG,YAAU,IAAIA,YAAU,CAACE,QAA5B,EAAqC,CAEpC,CAFD,MAGI;AACA,qBAAKhC,KAAL,GAAa;AAAA;AAAA,4DAAkB6B,UAA/B;AACA,uBAAO,IAAP;AACH;AACJ,aAhBD,MAiBK,IAAG/B,SAAS,KAAK;AAAA;AAAA,kDAAeyB,IAAhC,EAAqC;AACtC;AACA,kBAAMI,aAAW,GAAGhC,CAAC,GAAG,CAAxB;;AACA,kBAAMuC,aAAW,GAAGxC,CAAC,GAAG,CAAxB;;AAEA,kBAAGiC,aAAW,GAAG,CAAjB,EAAmB;AACf,qBAAK3B,KAAL,GAAa;AAAA;AAAA,4DAAkBmC,SAA/B;AACA;AACH;;AAED,kBAAML,YAAU,GAAGJ,QAAQ,CAAChC,CAAD,CAAR,CAAYiC,aAAZ,CAAnB;AACA,kBAAMI,YAAU,GAAGL,QAAQ,CAACQ,aAAD,CAAR,CAAsBP,aAAtB,CAAnB;;AACA,kBAAGG,YAAU,IAAIA,YAAU,CAACE,QAAzB,KAAsC,CAACD,YAAD,IAAeA,YAAU,CAACC,QAAhE,CAAH,EAA6E,CACzE;AACA;AACH,eAHD,MAII;AACA,qBAAKhC,KAAL,GAAa;AAAA;AAAA,4DAAkBmC,SAA/B;AACA,uBAAO,IAAP;AACH;AACJ,aApBI,MAqBA,IAAGrC,SAAS,KAAK;AAAA;AAAA,kDAAeuB,MAAhC,EAAuC;AACxC;AACA,kBAAMM,aAAW,GAAGhC,CAAC,GAAG,CAAxB;;AACA,kBAAMiC,aAAW,GAAGjC,CAAC,GAAG,CAAxB;;AAEA,kBAAGgC,aAAW,GAAG,CAAjB,EAAmB;AACf,qBAAK3B,KAAL,GAAa;AAAA;AAAA,4DAAkBoC,SAA/B;AACA;AACH;;AAED,kBAAMN,aAAU,GAAGJ,QAAQ,CAAChC,CAAD,CAAR,CAAYiC,aAAZ,CAAnB;AACA,kBAAMI,YAAU,GAAGL,QAAQ,CAAChC,CAAD,CAAR,CAAYkC,aAAZ,CAAnB;;AACA,kBAAGE,aAAU,IAAIA,aAAU,CAACE,QAAzB,KAAsC,CAACD,YAAD,IAAeA,YAAU,CAACC,QAAhE,CAAH,EAA6E,CACzE;AACA;AACH,eAHD,MAII;AACA,qBAAKhC,KAAL,GAAa;AAAA;AAAA,4DAAkBoC,SAA/B;AACA,uBAAO,IAAP;AACH;AACJ,aApBI,MAqBA,IAAGtC,SAAS,KAAK;AAAA;AAAA,kDAAewB,KAAhC,EAAsC;AACvC;AACA,kBAAMK,aAAW,GAAGhC,CAAC,GAAG,CAAxB;;AACA,kBAAMuC,aAAW,GAAGxC,CAAC,GAAG,CAAxB;;AAEA,kBAAGiC,aAAW,GAAG,CAAjB,EAAmB;AACf,qBAAK3B,KAAL,GAAa;AAAA;AAAA,4DAAkBqC,UAA/B;AACA;AACH;;AAED,kBAAMP,aAAU,GAAGJ,QAAQ,CAAChC,CAAD,CAAR,CAAYiC,aAAZ,CAAnB;AACA,kBAAMI,YAAU,GAAGL,QAAQ,CAACQ,aAAD,CAAR,CAAsBP,aAAtB,CAAnB;;AACA,kBAAGG,aAAU,IAAIA,aAAU,CAACE,QAAzB,KAAsC,CAACD,YAAD,IAAeA,YAAU,CAACC,QAAhE,CAAH,EAA6E,CACzE;AACA;AACH,eAHD,MAII;AACA,qBAAKhC,KAAL,GAAa;AAAA;AAAA,4DAAkBqC,UAA/B;AACA,uBAAO,IAAP;AACH;AACJ;AACJ,WAlFI,MAmFA,IAAGvB,cAAc,KAAK;AAAA;AAAA,kDAAgBQ,KAAtC,EAA4C;AAC7C;AACA,gBAAGxB,SAAS,KAAK;AAAA;AAAA,kDAAeC,GAAhC,EAAoC;AAChC;AACA,kBAAMuC,aAAW,GAAG5C,CAAC,GAAG,CAAxB;;AACA,kBAAMkC,aAAW,GAAGjC,CAAC,GAAG,CAAxB;;AAEA,kBAAG2C,aAAW,GAAG,CAAjB,EAAmB;AACf,qBAAKtC,KAAL,GAAa;AAAA;AAAA,4DAAkB6B,UAA/B;AACA;AACH;;AAED,kBAAMC,aAAU,GAAGJ,QAAQ,CAACY,aAAD,CAAR,CAAsB3C,CAAtB,CAAnB;AACA,kBAAMoC,YAAU,GAAGL,QAAQ,CAACY,aAAD,CAAR,CAAsBV,aAAtB,CAAnB;;AAEA,kBAAGE,aAAU,IAAIA,aAAU,CAACE,QAAzB,KAAsC,CAACD,YAAD,IAAeA,YAAU,CAACC,QAAhE,CAAH,EAA6E,CAE5E,CAFD,MAGI;AACA,qBAAKhC,KAAL,GAAa;AAAA;AAAA,4DAAkB6B,UAA/B;AACA,uBAAO,IAAP;AACH;AACJ,aApBD,MAqBK,IAAG/B,SAAS,KAAK;AAAA;AAAA,kDAAeyB,IAAhC,EAAqC;AACtC;AACA,kBAAMe,aAAW,GAAG5C,CAAC,GAAG,CAAxB;;AACA,kBAAG4C,aAAW,GAAG,CAAjB,EAAmB;AACf,qBAAKtC,KAAL,GAAa;AAAA;AAAA,4DAAkBmC,SAA/B;AACA;AACH;;AACD,kBAAML,aAAU,GAAGJ,QAAQ,CAACY,aAAD,CAAR,CAAsB3C,CAAtB,CAAnB;;AACA,kBAAGmC,aAAU,IAAIA,aAAU,CAACE,QAA5B,EAAqC,CAEpC,CAFD,MAGI;AACA,qBAAKhC,KAAL,GAAa;AAAA;AAAA,4DAAkBmC,SAA/B;AACA,uBAAO,IAAP;AACH;AACJ,aAfI,MAgBA,IAAGrC,SAAS,KAAK;AAAA;AAAA,kDAAeuB,MAAhC,EAAuC;AACxC;AACA,kBAAMiB,aAAW,GAAG5C,CAAC,GAAG,CAAxB;;AACA,kBAAMkC,aAAW,GAAGjC,CAAC,GAAG,CAAxB;;AACA,kBAAG2C,aAAW,GAAG,CAAjB,EAAmB;AACf,qBAAKtC,KAAL,GAAa;AAAA;AAAA,4DAAkBoC,SAA/B;AACA;AACH;;AAED,kBAAMN,aAAU,GAAGJ,QAAQ,CAACY,aAAD,CAAR,CAAsB3C,CAAtB,CAAnB;AACA,kBAAMoC,aAAU,GAAGL,QAAQ,CAACY,aAAD,CAAR,CAAsBV,aAAtB,CAAnB;;AACA,kBAAGE,aAAU,IAAIA,aAAU,CAACE,QAAzB,KAAsC,CAACD,aAAD,IAAeA,aAAU,CAACC,QAAhE,CAAH,EAA6E,CAE5E,CAFD,MAGI;AACA,qBAAKhC,KAAL,GAAa;AAAA;AAAA,4DAAkBoC,SAA/B;AACA,uBAAO,IAAP;AACH;AAEJ,aAnBI,MAoBA,IAAGtC,SAAS,KAAK;AAAA;AAAA,kDAAewB,KAAhC,EAAsC;AACvC;AACA,kBAAMgB,aAAW,GAAG5C,CAAC,GAAG,CAAxB;;AACA,kBAAMwC,aAAW,GAAGxC,CAAC,GAAG,CAAxB;;AACA,kBAAG4C,aAAW,GAAG,CAAjB,EAAmB;AACf,qBAAKtC,KAAL,GAAa;AAAA;AAAA,4DAAkBqC,UAA/B;AACA;AACH;;AAED,kBAAMP,aAAU,GAAGJ,QAAQ,CAACY,aAAD,CAAR,CAAsB3C,CAAtB,CAAnB;AACA,kBAAMoC,aAAU,GAAGL,QAAQ,CAACQ,aAAD,CAAR,CAAsBvC,CAAtB,CAAnB;;AACA,kBAAGmC,aAAU,IAAIA,aAAU,CAACE,QAAzB,KAAsC,CAACD,aAAD,IAAeA,aAAU,CAACC,QAAhE,CAAH,EAA6E,CAE5E,CAFD,MAGI;AACA,qBAAKhC,KAAL,GAAa;AAAA;AAAA,4DAAkBqC,UAA/B;AACA,uBAAO,IAAP;AACH;AAEJ;AACJ,WA/EI,MAgFA,IAAGvB,cAAc,KAAK;AAAA;AAAA,kDAAgBU,QAAtC,EAA+C;AAChD;AACA;AACA,gBAAIe,KAAJ;AACA,gBAAIC,KAAJ;;AAEA,gBAAG1C,SAAS,KAAK;AAAA;AAAA,kDAAeC,GAAhC,EAAoC;AAChCwC,cAAAA,KAAK,GAAG7C,CAAC,GAAG,CAAZ;AACA8C,cAAAA,KAAK,GAAG7C,CAAC,GAAG,CAAZ;AACH,aAHD,MAIK,IAAGG,SAAS,KAAK;AAAA;AAAA,kDAAeuB,MAAhC,EAAuC;AACxCkB,cAAAA,KAAK,GAAG7C,CAAC,GAAG,CAAZ;AACA8C,cAAAA,KAAK,GAAG7C,CAAC,GAAG,CAAZ;AACH,aAHI,MAIA,IAAGG,SAAS,KAAK;AAAA;AAAA,kDAAeyB,IAAhC,EAAqC;AACtCgB,cAAAA,KAAK,GAAG7C,CAAC,GAAG,CAAZ;AACA8C,cAAAA,KAAK,GAAG7C,CAAC,GAAG,CAAZ;AACH,aAHI,MAIA,IAAGG,SAAS,KAAK;AAAA;AAAA,kDAAewB,KAAhC,EAAsC;AACvCiB,cAAAA,KAAK,GAAG7C,CAAC,GAAG,CAAZ;AACA8C,cAAAA,KAAK,GAAG7C,CAAC,GAAG,CAAZ;AACH;;AAED,gBACO,CAAC,CAAC+B,QAAQ,CAAChC,CAAD,CAAR,CAAY8C,KAAZ,CAAD,IAAuBd,QAAQ,CAAChC,CAAD,CAAR,CAAY8C,KAAZ,EAAmBP,QAA3C,MACC,CAACP,QAAQ,CAACa,KAAD,CAAR,CAAgB5C,CAAhB,CAAD,IAAuB+B,QAAQ,CAACa,KAAD,CAAR,CAAgB5C,CAAhB,EAAmBsC,QAD3C,MAEC,CAACP,QAAQ,CAACa,KAAD,CAAR,CAAgBC,KAAhB,CAAD,IAA2Bd,QAAQ,CAACa,KAAD,CAAR,CAAgBC,KAAhB,EAAuBP,QAFnD,CADP,EAIC,CACG;AACH,aAND,MAOI;AACA,mBAAKjC,KAAL,GAAa;AAAA;AAAA,0DAAkByC,aAA/B;AACA,qBAAO,IAAP;AACH;;AAED,mBAAO,KAAP;AACH,WApCI,MAqCA,IAAG3B,cAAc,KAAK;AAAA;AAAA,kDAAgBW,SAAtC,EAAgD;AACjD;AACA;AACA,gBAAIc,MAAJ;;AACA,gBAAIC,MAAJ;;AACA,gBAAG1C,SAAS,KAAK;AAAA;AAAA,kDAAeC,GAAhC,EAAoC;AAChCwC,cAAAA,MAAK,GAAG7C,CAAC,GAAG,CAAZ;AACA8C,cAAAA,MAAK,GAAG7C,CAAC,GAAG,CAAZ;AACH,aAHD,MAIK,IAAGG,SAAS,KAAK;AAAA;AAAA,kDAAeuB,MAAhC,EAAuC;AACxCkB,cAAAA,MAAK,GAAG7C,CAAC,GAAG,CAAZ;AACA8C,cAAAA,MAAK,GAAG7C,CAAC,GAAG,CAAZ;AACH,aAHI,MAIA,IAAGG,SAAS,KAAK;AAAA;AAAA,kDAAeyB,IAAhC,EAAqC;AACtCgB,cAAAA,MAAK,GAAG7C,CAAC,GAAG,CAAZ;AACA8C,cAAAA,MAAK,GAAG7C,CAAC,GAAG,CAAZ;AACH,aAHI,MAIA,IAAGG,SAAS,KAAK;AAAA;AAAA,kDAAewB,KAAhC,EAAsC;AACvCiB,cAAAA,MAAK,GAAG7C,CAAC,GAAG,CAAZ;AACA8C,cAAAA,MAAK,GAAG7C,CAAC,GAAG,CAAZ;AACH;;AAED,gBACO,CAAC,CAAC+B,QAAQ,CAAChC,CAAD,CAAR,CAAY8C,MAAZ,CAAD,IAAuBd,QAAQ,CAAChC,CAAD,CAAR,CAAY8C,MAAZ,EAAmBP,QAA3C,MACC,CAACP,QAAQ,CAACa,MAAD,CAAR,CAAgB5C,CAAhB,CAAD,IAAuB+B,QAAQ,CAACa,MAAD,CAAR,CAAgB5C,CAAhB,EAAmBsC,QAD3C,MAEC,CAACP,QAAQ,CAACa,MAAD,CAAR,CAAgBC,MAAhB,CAAD,IAA2Bd,QAAQ,CAACa,MAAD,CAAR,CAAgBC,MAAhB,EAAuBP,QAFnD,CADP,EAIC,CACG;AACH,aAND,MAOI;AACA,mBAAKjC,KAAL,GAAa;AAAA;AAAA,0DAAkB0C,cAA/B;AACA,qBAAO,IAAP;AACH;;AAED,mBAAO,KAAP;AACH;;AAED,iBAAO,KAAP;AAEH;;AAEOnC,QAAAA,OAAO,CAACX,IAAD,EAAwB;AACnC,eAAKI,KAAL,GAAaJ,IAAb;AACH;;AA/jB4C,O","sourcesContent":["import { _decorator, Component, Node, Sprite, UITransform, Animation, AnimationClip, animation, SpriteFrame } from 'cc';\r\nimport { TILE_HEIGHT, TILE_WIDTH } from '../tile/TileManger';\r\nimport ResourceManager from '../../runtime/ResourceManager';\r\nimport { CONTROLLER_ENUM, DIRECTION_ENUM, DIRECTION_ORDER_ENUM, ENTITY_STATE_ENUM, ENTITY_TYPE_ENUM, EVENT_ENUM, PARAMS_NAME_ENUM } from '../../enums';\r\nimport EventManager from '../../runtime/EventManager';\r\nimport { PlayerStateMachine } from './PlayerStateMachine';\r\nimport { EntityManager } from '../../base/EntityManager';\r\nimport DataManager from '../../runtime/DataManager';\r\nconst { ccclass, property } = _decorator;\r\n\r\n\r\n\r\n\r\n@ccclass('PlayerManager')\r\nexport class PlayerManager extends EntityManager {\r\n\r\n    targetX:number = 0;\r\n    targetY:number = 0;\r\n    private  readonly _speed = 1/10;\r\n    private _isMoving:boolean = false;\r\n\r\n\r\n    async init(){   \r\n        //添加状态机\r\n        this.fsm = this.addComponent(PlayerStateMachine);\r\n        await this.fsm.init();\r\n        super.init({\r\n            x:2,\r\n            y:8,\r\n            type: ENTITY_TYPE_ENUM.PLAYER,\r\n            direction:DIRECTION_ENUM.TOP,\r\n            state:ENTITY_STATE_ENUM.IDLE\r\n        });\r\n\r\n        this.targetX = this.x;\r\n        this.targetY = this.y;\r\n\r\n        //await this.render();\r\n        //move函数和EVENT_ENUM.PLAYER_CTRL信号绑定到了一起\r\n        EventManager.Instance.on(EVENT_ENUM.PLAYER_CTRL, this.inputHandle, this);\r\n        EventManager.Instance.on(EVENT_ENUM.ATTACK_PLAYER, this._onDead, this);\r\n    }\r\n\r\n    update(){\r\n        this.updateXY();\r\n        //虚拟坐标转换为瓦片坐标\r\n        //瓦片地图左上角为原点\r\n        //注意人物大小与瓦片之间的偏移\r\n        super.update();\r\n    }\r\n\r\n    updateXY(){\r\n        if(this.targetX < this.x){  //在目标右侧\r\n            this.x -= this._speed;  //向左移动\r\n        }\r\n        else if(this.targetX > this.x){\r\n            this.x += this._speed;\r\n        }\r\n\r\n        if(this.targetY < this.y){  //在目标上侧\r\n            this.y -= this._speed;  //向下移动\r\n        }\r\n        else if(this.targetY > this.y){\r\n            this.y += this._speed;\r\n        }\r\n\r\n        //达到一定距离直接赋值，防止鬼畜\r\n        if(Math.abs(this.targetX - this.x) <= 0.1 && Math.abs(this.targetY - this.y) <= 0.1 && this._isMoving){\r\n            this._isMoving = false;\r\n            this.x = this.targetX;\r\n            this.y = this.targetY;\r\n            EventManager.Instance.emit(EVENT_ENUM.PLAYER_MOVE_END);\r\n        }\r\n    }\r\n\r\n\r\n    //处理用户输入\r\n    inputHandle(inputDirection: CONTROLLER_ENUM){\r\n        //正在移动return\r\n        if(this._isMoving){\r\n            return;\r\n        }\r\n        //人物死亡return掉\r\n        if(this.state === ENTITY_STATE_ENUM.DEATH || this.state === ENTITY_STATE_ENUM.AIRDEATH){\r\n            return;\r\n        }\r\n        //撞了不用往下走了\r\n        if(this.willBlock(inputDirection)){\r\n            console.log(\"block\");\r\n            return; \r\n        }\r\n        this.move(inputDirection);\r\n\r\n    }\r\n\r\n\r\n\r\n    move(inputDirection: CONTROLLER_ENUM){\r\n        \r\n        //console.log(DataManager.Instance.tileInfo);\r\n        //注意Y轴是相反的\r\n        if(inputDirection === CONTROLLER_ENUM.TOP){\r\n            this.targetY -=1;\r\n            this._isMoving = true;\r\n        }\r\n        else if(inputDirection === CONTROLLER_ENUM.BOTTOM){\r\n            this.targetY +=1;\r\n            this._isMoving = true;\r\n        }\r\n        else if(inputDirection === CONTROLLER_ENUM.RIGHT){\r\n            this.targetX +=1;\r\n            this._isMoving = true;\r\n        }\r\n        else if(inputDirection === CONTROLLER_ENUM.LEFT){\r\n            this.targetX -=1;\r\n            this._isMoving = true;\r\n        }\r\n        else if(inputDirection === CONTROLLER_ENUM.TURNLEFT){\r\n            //左转后进入该逻辑\r\n            //左转后人物方向改变了\r\n            if(this.direction === DIRECTION_ENUM.TOP){\r\n                this.direction = DIRECTION_ENUM.LEFT;\r\n            }\r\n            else if(this.direction === DIRECTION_ENUM.LEFT){\r\n                this.direction = DIRECTION_ENUM.BOTTOM;\r\n            }\r\n            else if(this.direction === DIRECTION_ENUM.BOTTOM){\r\n                this.direction = DIRECTION_ENUM.RIGHT;\r\n            }\r\n            else if(this.direction === DIRECTION_ENUM.RIGHT){\r\n                this.direction = DIRECTION_ENUM.TOP;\r\n            }\r\n            this.state = ENTITY_STATE_ENUM.TURNLEFT;\r\n            EventManager.Instance.emit(EVENT_ENUM.PLAYER_MOVE_END);\r\n        }\r\n        else if(inputDirection === CONTROLLER_ENUM.TURNRIGHT){\r\n            if(this.direction === DIRECTION_ENUM.TOP){\r\n                this.direction = DIRECTION_ENUM.RIGHT;\r\n            }\r\n            else if(this.direction === DIRECTION_ENUM.RIGHT){\r\n                this.direction = DIRECTION_ENUM.BOTTOM;\r\n            }\r\n            else if(this.direction === DIRECTION_ENUM.BOTTOM){\r\n                this.direction = DIRECTION_ENUM.LEFT;\r\n            }\r\n            else if(this.direction === DIRECTION_ENUM.LEFT){\r\n                this.direction = DIRECTION_ENUM.TOP;\r\n            }\r\n            this.state = ENTITY_STATE_ENUM.TURNRIGHT;\r\n            EventManager.Instance.emit(EVENT_ENUM.PLAYER_MOVE_END);\r\n        }\r\n    }\r\n\r\n\r\n    //判断是否撞墙了\r\n    willBlock(inputDirection: CONTROLLER_ENUM):boolean{\r\n        //解构出自己数据\r\n        const {targetX:x, targetY:y, direction} = this;\r\n        //解构出地图信息\r\n        const {tileInfo} = DataManager.Instance;\r\n\r\n        \r\n        if(inputDirection === CONTROLLER_ENUM.TOP){\r\n            //输入方向为上\r\n            if(direction === DIRECTION_ENUM.TOP){\r\n                //人当前方向也是上\r\n                //拿到下一个y坐标(用二维坐标来表示角色位置而不是position)\r\n                const playerNextY = y - 1;\r\n                const weaponNextY = y - 2;\r\n                //往上直接遇到墙\r\n                if(playerNextY < 0){\r\n                    this.state = ENTITY_STATE_ENUM.BLOCKFRONT;\r\n                    return true;\r\n                }\r\n\r\n                //拿到下两个瓦片，一个是人物，一个是枪，总不能枪怼墙上\r\n                const playerTile = tileInfo[x][playerNextY];\r\n                const weaponTile = tileInfo[x][weaponNextY];\r\n\r\n                if(playerTile && playerTile.moveable && (!weaponTile || weaponTile.turnable)){\r\n                    //人能走 且 枪能走，要么瓦片不存在要么瓦片可以转动\r\n                    //empty\r\n                }\r\n                else{\r\n                    this.state = ENTITY_STATE_ENUM.BLOCKFRONT;\r\n                    return true;\r\n                }\r\n\r\n            }\r\n            else if(direction === DIRECTION_ENUM.LEFT){\r\n                //当前方向为左\r\n                //需要三个瓦片，左上角\r\n                let playerNextY = y - 1;\r\n                let weaponNextX = x - 1;\r\n                if(playerNextY < 0){\r\n                    this.state = ENTITY_STATE_ENUM.BLOCKLEFT;\r\n                    return;\r\n                }\r\n\r\n                //拿到下两个瓦片\r\n                //这个时候枪是横向左，人可能不被挡住，但是枪会\r\n                const playerTile = tileInfo[x][playerNextY];\r\n                const weaponTile = tileInfo[weaponNextX][playerNextY];\r\n\r\n                if(playerTile && playerTile.moveable && (!weaponTile || weaponTile.turnable)){\r\n                    //人能走\r\n                    //枪不存在，或者枪能转\r\n\r\n\r\n                }\r\n                else{\r\n                    //待定\r\n                    this.state = ENTITY_STATE_ENUM.BLOCKLEFT;\r\n                    return true;\r\n                }\r\n\r\n\r\n            }\r\n            else if(direction === DIRECTION_ENUM.BOTTOM){\r\n                //当前方向为下\r\n                //只需要下一个瓦片可走就行\r\n                const playerNextY = y - 1;\r\n                if(playerNextY < 0){\r\n                    this.state = ENTITY_STATE_ENUM.BLOCKBACK;\r\n                    return;\r\n                }\r\n                //拿到瓦片\r\n                const playerTile = tileInfo[x][playerNextY];\r\n                if(playerTile && playerTile.moveable){\r\n                    //人能走就行\r\n                }\r\n                else{\r\n                    this.state = ENTITY_STATE_ENUM.BLOCKBACK;\r\n                    return true;\r\n                }\r\n            }\r\n            else if(direction === DIRECTION_ENUM.RIGHT){\r\n                //当前方向为右\r\n                //需要三个瓦片，右上角\r\n                let playerNextY = y - 1;\r\n                let weaponNextX = x + 1;\r\n\r\n                if(playerNextY < 0){\r\n                    this.state = ENTITY_STATE_ENUM.BLOCKRIGHT;\r\n                    return;\r\n                }\r\n                const playerTile = tileInfo[x][playerNextY];\r\n                const weaponTile = tileInfo[weaponNextX][playerNextY];\r\n                if(playerTile && playerTile.moveable && (!weaponTile || weaponTile.moveable)){\r\n                    //人物：下一个瓦片且可移动\r\n                    //枪：不存在或能转动\r\n\r\n                }\r\n                else{\r\n                    this.state = ENTITY_STATE_ENUM.BLOCKRIGHT;\r\n                    return true;\r\n                }\r\n\r\n            }\r\n        }\r\n        else if(inputDirection === CONTROLLER_ENUM.LEFT){\r\n            //输入方向为左\r\n            if(direction === DIRECTION_ENUM.TOP){\r\n                //人物方向为上\r\n                const playerNextX = x - 1;\r\n                const weaponNextY = y - 1;\r\n\r\n                if(playerNextX < 0){\r\n                    this.state = ENTITY_STATE_ENUM.BLOCKFRONT;\r\n                    return;\r\n                }\r\n                const playerTile = tileInfo[playerNextX][y];\r\n                const weaponTile = tileInfo[playerNextX][weaponNextY]\r\n                if(playerTile && playerTile.moveable && (!weaponTile || weaponTile.moveable)){\r\n                    //人：能走\r\n                    //枪不存在，或者枪能转\r\n                }\r\n                else{\r\n                    this.state = ENTITY_STATE_ENUM.BLOCKFRONT;\r\n                    return true;\r\n                }\r\n\r\n            }\r\n            else if(direction === DIRECTION_ENUM.LEFT){\r\n                //人物方向为左\r\n                const playerNextX = x - 1;\r\n                const weaponNextX = x - 2;\r\n                \r\n                if(playerNextX < 0){\r\n                    this.state = ENTITY_STATE_ENUM.BLOCKLEFT;\r\n                    return;\r\n                }\r\n\r\n                const playerTile = tileInfo[playerNextX][y];\r\n                const weaponTile = tileInfo[weaponNextX][y];\r\n\r\n                if(playerTile && playerTile.moveable && (!weaponTile || weaponTile.moveable)){\r\n\r\n                }\r\n                else{\r\n                    this.state = ENTITY_STATE_ENUM.BLOCKLEFT;\r\n                    return true;\r\n                }\r\n\r\n            }\r\n            else if(direction === DIRECTION_ENUM.BOTTOM){\r\n                //人物方向为下\r\n                const playerNextX = x - 1;\r\n                const weaponNextY = y + 1;\r\n\r\n                if(playerNextX < 0){\r\n                    this.state = ENTITY_STATE_ENUM.BLOCKBACK;\r\n                    return;\r\n                }\r\n\r\n                const playerTile = tileInfo[playerNextX][y];\r\n                const weaponTile = tileInfo[playerNextX][weaponNextY];\r\n                if(playerTile && playerTile.moveable && (!weaponTile || weaponTile.moveable)){\r\n\r\n                }\r\n                else{\r\n                    this.state = ENTITY_STATE_ENUM.BLOCKBACK;\r\n                    return true;\r\n                }\r\n\r\n\r\n            }\r\n            else if(direction === DIRECTION_ENUM.RIGHT){\r\n                //人物方向为右\r\n                const playerNextX = x - 1;\r\n                if(playerNextX < 0){\r\n                    this.state = ENTITY_STATE_ENUM.BLOCKRIGHT;\r\n                    return;\r\n                }\r\n\r\n                const playerTile = tileInfo[playerNextX][y];\r\n\r\n                if(playerTile && playerTile.moveable){\r\n\r\n                }\r\n                else{\r\n                    this.state = ENTITY_STATE_ENUM.BLOCKRIGHT;\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        else if(inputDirection === CONTROLLER_ENUM.BOTTOM){\r\n            //输入方向向下\r\n            if(direction === DIRECTION_ENUM.TOP){\r\n                //人物向上\r\n                const playerNextY = y + 1;\r\n                if(playerNextY < 0){\r\n                    this.state = ENTITY_STATE_ENUM.BLOCKFRONT;\r\n                    return;\r\n                }\r\n                \r\n                const playerTile = tileInfo[x][playerNextY];\r\n                if(playerTile && playerTile.moveable){\r\n\r\n                }\r\n                else{\r\n                    this.state = ENTITY_STATE_ENUM.BLOCKFRONT;\r\n                    return true;\r\n                }\r\n            }\r\n            else if(direction === DIRECTION_ENUM.LEFT){\r\n                //人物向左\r\n                const playerNextY = y + 1;\r\n                const weaponNextX = x - 1;\r\n\r\n                if(playerNextY < 0){\r\n                    this.state = ENTITY_STATE_ENUM.BLOCKLEFT;\r\n                    return;\r\n                }\r\n                \r\n                const playerTile = tileInfo[x][playerNextY];\r\n                const weaponTile = tileInfo[weaponNextX][playerNextY];\r\n                if(playerTile && playerTile.moveable && (!weaponTile || weaponTile.moveable)){\r\n                    //人可走\r\n                    //枪不存在，或者枪能转\r\n                }\r\n                else{\r\n                    this.state = ENTITY_STATE_ENUM.BLOCKLEFT;\r\n                    return true;\r\n                }\r\n            }\r\n            else if(direction === DIRECTION_ENUM.BOTTOM){\r\n                //人物向下\r\n                const playerNextY = y + 1;\r\n                const weaponNextY = y + 2;\r\n\r\n                if(playerNextY < 0){\r\n                    this.state = ENTITY_STATE_ENUM.BLOCKBACK;\r\n                    return;\r\n                }\r\n                \r\n                const playerTile = tileInfo[x][playerNextY];\r\n                const weaponTile = tileInfo[x][weaponNextY];\r\n                if(playerTile && playerTile.moveable && (!weaponTile || weaponTile.moveable)){\r\n                    //人可走\r\n                    //枪不存在，或者枪能转\r\n                }\r\n                else{\r\n                    this.state = ENTITY_STATE_ENUM.BLOCKBACK;\r\n                    return true;\r\n                }\r\n            }\r\n            else if(direction === DIRECTION_ENUM.RIGHT){\r\n                //人物向右\r\n                const playerNextY = y + 1;\r\n                const weaponNextX = x + 1;\r\n\r\n                if(playerNextY < 0){\r\n                    this.state = ENTITY_STATE_ENUM.BLOCKRIGHT;\r\n                    return;\r\n                }\r\n                \r\n                const playerTile = tileInfo[x][playerNextY];\r\n                const weaponTile = tileInfo[weaponNextX][playerNextY];\r\n                if(playerTile && playerTile.moveable && (!weaponTile || weaponTile.moveable)){\r\n                    //人可走\r\n                    //枪不存在，或者枪能转\r\n                }\r\n                else{\r\n                    this.state = ENTITY_STATE_ENUM.BLOCKRIGHT;\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        else if(inputDirection === CONTROLLER_ENUM.RIGHT){\r\n            //输入方向向右\r\n            if(direction === DIRECTION_ENUM.TOP){\r\n                //人物向上\r\n                const playerNextX = x + 1;\r\n                const weaponNextY = y - 1;\r\n\r\n                if(playerNextX < 0){\r\n                    this.state = ENTITY_STATE_ENUM.BLOCKFRONT;\r\n                    return;\r\n                }\r\n\r\n                const playerTile = tileInfo[playerNextX][y];\r\n                const weaponTile = tileInfo[playerNextX][weaponNextY];\r\n\r\n                if(playerTile && playerTile.moveable && (!weaponTile || weaponTile.moveable)){\r\n\r\n                }\r\n                else{\r\n                    this.state = ENTITY_STATE_ENUM.BLOCKFRONT;\r\n                    return true;\r\n                }\r\n            }\r\n            else if(direction === DIRECTION_ENUM.LEFT){\r\n                //人物向左\r\n                const playerNextX = x + 1;\r\n                if(playerNextX < 0){\r\n                    this.state = ENTITY_STATE_ENUM.BLOCKLEFT;\r\n                    return;\r\n                }\r\n                const playerTile = tileInfo[playerNextX][y];\r\n                if(playerTile && playerTile.moveable){\r\n\r\n                }\r\n                else{\r\n                    this.state = ENTITY_STATE_ENUM.BLOCKLEFT;\r\n                    return true;\r\n                }\r\n            }\r\n            else if(direction === DIRECTION_ENUM.BOTTOM){\r\n                //人物向下\r\n                const playerNextX = x + 1;\r\n                const weaponNextY = y + 1;\r\n                if(playerNextX < 0){\r\n                    this.state = ENTITY_STATE_ENUM.BLOCKBACK;\r\n                    return;\r\n                }\r\n\r\n                const playerTile = tileInfo[playerNextX][y];\r\n                const weaponTile = tileInfo[playerNextX][weaponNextY];\r\n                if(playerTile && playerTile.moveable && (!weaponTile || weaponTile.moveable)){\r\n\r\n                }\r\n                else{\r\n                    this.state = ENTITY_STATE_ENUM.BLOCKBACK;\r\n                    return true;\r\n                }\r\n\r\n            }\r\n            else if(direction === DIRECTION_ENUM.RIGHT){\r\n                //人物向右\r\n                const playerNextX = x + 1;\r\n                const weaponNextX = x + 2;\r\n                if(playerNextX < 0){\r\n                    this.state = ENTITY_STATE_ENUM.BLOCKRIGHT;\r\n                    return;\r\n                }\r\n\r\n                const playerTile = tileInfo[playerNextX][y];\r\n                const weaponTile = tileInfo[weaponNextX][y];\r\n                if(playerTile && playerTile.moveable && (!weaponTile || weaponTile.moveable)){\r\n\r\n                }\r\n                else{\r\n                    this.state = ENTITY_STATE_ENUM.BLOCKRIGHT;\r\n                    return true;\r\n                }\r\n\r\n            }\r\n        }\r\n        else if(inputDirection === CONTROLLER_ENUM.TURNLEFT){\r\n            //输入方向向左转\r\n            //需要判断三个瓦片\r\n            let nextX;\r\n            let nextY;\r\n\r\n            if(direction === DIRECTION_ENUM.TOP){\r\n                nextX = x - 1;\r\n                nextY = y - 1;\r\n            }\r\n            else if(direction === DIRECTION_ENUM.BOTTOM){\r\n                nextX = x + 1;\r\n                nextY = y + 1;\r\n            }\r\n            else if(direction === DIRECTION_ENUM.LEFT){\r\n                nextX = x - 1;\r\n                nextY = y + 1;\r\n            }\r\n            else if(direction === DIRECTION_ENUM.RIGHT){\r\n                nextX = x + 1;\r\n                nextY = y - 1;\r\n            }\r\n\r\n            if(\r\n                   (!tileInfo[x][nextY] || tileInfo[x][nextY].turnable)\r\n                && (!tileInfo[nextX][y] || tileInfo[nextX][y].turnable)\r\n                && (!tileInfo[nextX][nextY] || tileInfo[nextX][nextY].turnable)\r\n            ){\r\n                //empty\r\n            }\r\n            else{\r\n                this.state = ENTITY_STATE_ENUM.BLOCKTURNLEFT;\r\n                return true;\r\n            }\r\n\r\n            return false;\r\n        }\r\n        else if(inputDirection === CONTROLLER_ENUM.TURNRIGHT){\r\n            //输入方向向左转\r\n            //需要判断三个瓦片\r\n            let nextX;\r\n            let nextY;\r\n            if(direction === DIRECTION_ENUM.TOP){\r\n                nextX = x + 1;\r\n                nextY = y - 1;\r\n            }\r\n            else if(direction === DIRECTION_ENUM.BOTTOM){\r\n                nextX = x - 1;\r\n                nextY = y + 1;\r\n            }\r\n            else if(direction === DIRECTION_ENUM.LEFT){\r\n                nextX = x - 1;\r\n                nextY = y - 1;\r\n            }\r\n            else if(direction === DIRECTION_ENUM.RIGHT){\r\n                nextX = x + 1;\r\n                nextY = y + 1;\r\n            }\r\n\r\n            if(\r\n                   (!tileInfo[x][nextY] || tileInfo[x][nextY].turnable)\r\n                && (!tileInfo[nextX][y] || tileInfo[nextX][y].turnable)\r\n                && (!tileInfo[nextX][nextY] || tileInfo[nextX][nextY].turnable)\r\n            ){\r\n                //empty\r\n            }\r\n            else{\r\n                this.state = ENTITY_STATE_ENUM.BLOCKTURNRIGHT;\r\n                return true;\r\n            }\r\n\r\n            return false;\r\n        }\r\n\r\n        return false;\r\n\r\n    }\r\n\r\n    private _onDead(type:ENTITY_STATE_ENUM){\r\n        this.state = type;\r\n    }\r\n}\r\n\r\n\r\n"]}