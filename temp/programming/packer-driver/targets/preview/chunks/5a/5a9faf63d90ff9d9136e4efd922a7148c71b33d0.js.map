{"version":3,"sources":["file:///E:/git/Cramped_Room_Of_Death/assets/scripts/ui/DrawManager.ts"],"names":["_decorator","BlockInputEvents","Color","Component","game","Graphics","UITransform","view","ccclass","property","SCREEN_WIDTH","getVisibleSize","width","SCREEN_HEIGHT","height","FADE_STATE_ENUM","DEFAULT_DURATION","DrawManager","_ctx","_state","_oldTime","_duration","_fadeResolve","_block","init","addComponent","transform","getComponent","setAnchorPoint","setContentSize","setAlpha","percent","clear","rect","fillColor","fill","enabled","update","totalTime","FADE_IN","IDLE","FADE_OUT","fadeIn","duration","Promise","resolve","fadeOut","mask","setTimeout"],"mappings":"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","sourcesContent":["import { _decorator, BlockInputEvents, Color, Component, game, Graphics, Node, UITransform, view } from 'cc';\r\nimport EventManager from '../../runtime/EventManager';\r\nimport { CONTROLLER_ENUM, EVENT_ENUM } from '../../enums';\r\nconst { ccclass, property } = _decorator;\r\n\r\nconst SCREEN_WIDTH = view.getVisibleSize().width;\r\nconst SCREEN_HEIGHT = view.getVisibleSize().height;\r\n\r\nenum FADE_STATE_ENUM{\r\n    IDLE,\r\n    FADE_IN,\r\n    FADE_OUT\r\n};\r\n\r\nexport const DEFAULT_DURATION = 2000;\r\n\r\n@ccclass('DrawManager')\r\nexport class DrawManager extends Component {\r\n    private _ctx:Graphics;\r\n    private _state:FADE_STATE_ENUM;\r\n    private _oldTime:number = 0;\r\n    private _duration:number = 0;\r\n    private _fadeResolve:(value:PromiseLike<null>)=>void;\r\n    private _block:BlockInputEvents;    //防止输入穿透到下层节点，一般用于上层UI的背景\r\n\r\n    init(){\r\n        this._block = this.addComponent(BlockInputEvents);\r\n        this._ctx = this.addComponent(Graphics);\r\n        const transform = this.getComponent(UITransform);\r\n        transform.setAnchorPoint(0.5, 0.5);\r\n        transform.setContentSize(SCREEN_WIDTH, SCREEN_HEIGHT);\r\n        this.setAlpha(1);\r\n    }\r\n\r\n    setAlpha(percent:number){\r\n        //清空\r\n        this._ctx.clear();\r\n        //画一个矩形\r\n        this._ctx.rect(0, 0, SCREEN_WIDTH, SCREEN_HEIGHT);\r\n        //填充颜色\r\n        this._ctx.fillColor = new Color(0, 0, 0, 255 * percent);\r\n        //填满\r\n        this._ctx.fill();\r\n        this._block.enabled = percent === 1;\r\n    }\r\n\r\n    update(){\r\n        const percent = (game.totalTime - this._oldTime) / this._duration;\r\n        ////console.log(percent);\r\n        switch(this._state){\r\n            case FADE_STATE_ENUM.FADE_IN:\r\n                if(percent < 1){\r\n                    this.setAlpha(percent);\r\n                }\r\n                else{\r\n                    this.setAlpha(1);\r\n                    this._state = FADE_STATE_ENUM.IDLE;\r\n                    this._fadeResolve(null);\r\n                }\r\n                break;\r\n            case FADE_STATE_ENUM.FADE_OUT:\r\n                if(percent < 1){\r\n                    this.setAlpha(1 - percent);\r\n                }\r\n                else{\r\n                    this.setAlpha(0);\r\n                    this._state = FADE_STATE_ENUM.IDLE;\r\n                    this._fadeResolve(null);\r\n                }\r\n                break;    \r\n        \r\n        }\r\n    }\r\n\r\n    fadeIn(duration:number = DEFAULT_DURATION){\r\n        this.setAlpha(0);\r\n        this._duration = duration;\r\n        this._oldTime = game.totalTime;\r\n        this._state = FADE_STATE_ENUM.FADE_IN;\r\n        return new Promise((resolve)=>{\r\n            this._fadeResolve = resolve;\r\n        });\r\n    }\r\n\r\n    fadeOut(duration:number = DEFAULT_DURATION){\r\n        this.setAlpha(1);\r\n        this._duration = duration;\r\n        this._oldTime = game.totalTime;\r\n        this._state = FADE_STATE_ENUM.FADE_OUT;\r\n        return new Promise((resolve)=>{\r\n            this._fadeResolve = resolve;\r\n        });\r\n    }\r\n\r\n    mask(){\r\n        this.setAlpha(1);\r\n        return new Promise((resolve)=>{\r\n            setTimeout(resolve, DEFAULT_DURATION);\r\n        });\r\n    }\r\n}\r\n\r\n\r\n"]}