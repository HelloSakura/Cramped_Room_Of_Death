{"version":3,"sources":["file:///E:/git/Cramped_Room_Of_Death/assets/scripts/player/PlayerManager.ts"],"names":["_decorator","CONTROLLER_ENUM","DIRECTION_ENUM","ENTITY_STATE_ENUM","EVENT_ENUM","EventManager","PlayerStateMachine","EntityManager","DataManager","ccclass","property","PlayerManager","targetX","targetY","_speed","_isMoving","init","params","fsm","addComponent","x","y","Instance","on","PLAYER_CTRL","inputHandle","ATTACK_PLAYER","_onDead","update","updateXY","Math","abs","emit","PLAYER_MOVE_END","inputDirection","state","DEATH","AIRDEATH","ATTACK","id","_willAttack","ATTACK_ENEMY","DOOR_OPEN","willBlock","console","log","move","enemies","filter","enemy","i","length","enemyX","enemyY","enemyId","direction","TOP","LEFT","RIGHT","BOTTOM","type","TURNLEFT","TURNRIGHT","tileInfo","doorX","doorY","doorState","door","playerNextY","BLOCKFRONT","weaponNextY","playerTile","weaponTile","forEach","moveable","turnable","weaponNextX","BLOCKLEFT","BLOCKBACK","BLOCKRIGHT","playerNextX","nextX","nextY","BLOCKTURNLEFT","BLOCKTURNRIGHT"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, Sprite, UITransform, Animation, AnimationClip, animation, SpriteFrame } from 'cc';\r\nimport { TILE_HEIGHT, TILE_WIDTH } from '../tile/TileManger';\r\nimport ResourceManager from '../../runtime/ResourceManager';\r\nimport { CONTROLLER_ENUM, DIRECTION_ENUM, DIRECTION_ORDER_ENUM, ENTITY_STATE_ENUM, ENTITY_TYPE_ENUM, EVENT_ENUM, PARAMS_NAME_ENUM } from '../../enums';\r\nimport EventManager from '../../runtime/EventManager';\r\nimport { PlayerStateMachine } from './PlayerStateMachine';\r\nimport { EntityManager } from '../../base/EntityManager';\r\nimport DataManager from '../../runtime/DataManager';\r\nimport { IEntity } from '../../levels';\r\nimport { EnemyManager } from '../../base/EnemyManager';\r\nconst { ccclass, property } = _decorator;\r\n\r\n\r\n\r\n\r\n@ccclass('PlayerManager')\r\nexport class PlayerManager extends EntityManager {\r\n\r\n    targetX:number = 0;\r\n    targetY:number = 0;\r\n    private  readonly _speed = 1/10;\r\n    private _isMoving:boolean = false;\r\n\r\n\r\n    async init(params: IEntity){   \r\n        //添加状态机\r\n        this.fsm = this.addComponent(PlayerStateMachine);\r\n        await this.fsm.init();\r\n        super.init(params);\r\n\r\n        this.targetX = this.x;\r\n        this.targetY = this.y;\r\n\r\n        //await this.render();\r\n        //move函数和EVENT_ENUM.PLAYER_CTRL信号绑定到了一起\r\n        EventManager.Instance.on(EVENT_ENUM.PLAYER_CTRL, this.inputHandle, this);\r\n        EventManager.Instance.on(EVENT_ENUM.ATTACK_PLAYER, this._onDead, this);\r\n    }\r\n\r\n    update(){\r\n        this.updateXY();\r\n        //虚拟坐标转换为瓦片坐标\r\n        //瓦片地图左上角为原点\r\n        //注意人物大小与瓦片之间的偏移\r\n        super.update();\r\n    }\r\n\r\n    updateXY(){\r\n        if(this.targetX < this.x){  //在目标右侧\r\n            this.x -= this._speed;  //向左移动\r\n        }\r\n        else if(this.targetX > this.x){\r\n            this.x += this._speed;\r\n        }\r\n\r\n        if(this.targetY < this.y){  //在目标上侧\r\n            this.y -= this._speed;  //向下移动\r\n        }\r\n        else if(this.targetY > this.y){\r\n            this.y += this._speed;\r\n        }\r\n\r\n        //达到一定距离直接赋值，防止鬼畜\r\n        if(Math.abs(this.targetX - this.x) <= 0.1 && Math.abs(this.targetY - this.y) <= 0.1 && this._isMoving){\r\n            this._isMoving = false;\r\n            this.x = this.targetX;\r\n            this.y = this.targetY;\r\n            EventManager.Instance.emit(EVENT_ENUM.PLAYER_MOVE_END);\r\n        }\r\n    }\r\n\r\n\r\n    //处理用户输入\r\n    inputHandle(inputDirection: CONTROLLER_ENUM){\r\n        //正在移动return\r\n        if(this._isMoving){\r\n            return;\r\n        }\r\n        //人物死亡return掉\r\n        if(this.state === ENTITY_STATE_ENUM.DEATH \r\n        || this.state === ENTITY_STATE_ENUM.AIRDEATH \r\n        || this.state === ENTITY_STATE_ENUM.ATTACK\r\n        ){\r\n            return;\r\n        }\r\n\r\n        //判断攻击敌人\r\n        const id = this._willAttack(inputDirection)\r\n        if(id){\r\n            EventManager.Instance.emit(EVENT_ENUM.ATTACK_ENEMY, id);\r\n            EventManager.Instance.emit(EVENT_ENUM.DOOR_OPEN);\r\n            return;\r\n        }\r\n        //撞了不用往下走了\r\n        if(this.willBlock(inputDirection)){\r\n            console.log(\"block\");\r\n            return; \r\n        }\r\n        this.move(inputDirection);\r\n\r\n    }\r\n\r\n    private _willAttack(inputDirection:CONTROLLER_ENUM):boolean{\r\n        const enemies = DataManager.Instance.enemies.filter(enemy => enemy.state !== ENTITY_STATE_ENUM.DEATH);\r\n        for (let i = 0; i < enemies.length; i++) {\r\n            const {x:enemyX, y:enemyY, id:enemyId} = enemies[i];\r\n            if(this.direction === DIRECTION_ENUM.TOP\r\n            && inputDirection === CONTROLLER_ENUM.TOP\r\n            && enemyX === this.x\r\n            && enemyY === this.targetY - 2\r\n            ){\r\n                this.state = ENTITY_STATE_ENUM.ATTACK;\r\n                return enemyId;\r\n            }\r\n            else if(this.direction === DIRECTION_ENUM.LEFT\r\n            && inputDirection === CONTROLLER_ENUM.LEFT\r\n            && enemyX === this.x - 2\r\n            && enemyY === this.targetY\r\n            ){\r\n                this.state = ENTITY_STATE_ENUM.ATTACK;\r\n                return enemyId;\r\n            }\r\n            else if(this.direction === DIRECTION_ENUM.RIGHT\r\n            && inputDirection === CONTROLLER_ENUM.RIGHT\r\n            && enemyX === this.x + 2\r\n            && enemyY === this.targetY\r\n            ){\r\n                this.state = ENTITY_STATE_ENUM.ATTACK;\r\n                return enemyId;\r\n            }\r\n            if(this.direction === DIRECTION_ENUM.BOTTOM\r\n            && inputDirection === CONTROLLER_ENUM.BOTTOM\r\n            && enemyX === this.x\r\n            && enemyY === this.targetY + 2\r\n            ){\r\n                this.state = ENTITY_STATE_ENUM.ATTACK;\r\n                return enemyId;\r\n            }\r\n        \r\n        }\r\n        return null;\r\n    }\r\n\r\n    private _onDead(type:ENTITY_STATE_ENUM){\r\n        this.state = type;\r\n    }\r\n\r\n    move(inputDirection: CONTROLLER_ENUM){\r\n        \r\n        //console.log(DataManager.Instance.tileInfo);\r\n        //注意Y轴是相反的\r\n        if(inputDirection === CONTROLLER_ENUM.TOP){\r\n            this.targetY -=1;\r\n            this._isMoving = true;\r\n        }\r\n        else if(inputDirection === CONTROLLER_ENUM.BOTTOM){\r\n            this.targetY +=1;\r\n            this._isMoving = true;\r\n        }\r\n        else if(inputDirection === CONTROLLER_ENUM.RIGHT){\r\n            this.targetX +=1;\r\n            this._isMoving = true;\r\n        }\r\n        else if(inputDirection === CONTROLLER_ENUM.LEFT){\r\n            this.targetX -=1;\r\n            this._isMoving = true;\r\n        }\r\n        else if(inputDirection === CONTROLLER_ENUM.TURNLEFT){\r\n            //左转后进入该逻辑\r\n            //左转后人物方向改变了\r\n            if(this.direction === DIRECTION_ENUM.TOP){\r\n                this.direction = DIRECTION_ENUM.LEFT;\r\n            }\r\n            else if(this.direction === DIRECTION_ENUM.LEFT){\r\n                this.direction = DIRECTION_ENUM.BOTTOM;\r\n            }\r\n            else if(this.direction === DIRECTION_ENUM.BOTTOM){\r\n                this.direction = DIRECTION_ENUM.RIGHT;\r\n            }\r\n            else if(this.direction === DIRECTION_ENUM.RIGHT){\r\n                this.direction = DIRECTION_ENUM.TOP;\r\n            }\r\n            this.state = ENTITY_STATE_ENUM.TURNLEFT;\r\n            EventManager.Instance.emit(EVENT_ENUM.PLAYER_MOVE_END);\r\n        }\r\n        else if(inputDirection === CONTROLLER_ENUM.TURNRIGHT){\r\n            if(this.direction === DIRECTION_ENUM.TOP){\r\n                this.direction = DIRECTION_ENUM.RIGHT;\r\n            }\r\n            else if(this.direction === DIRECTION_ENUM.RIGHT){\r\n                this.direction = DIRECTION_ENUM.BOTTOM;\r\n            }\r\n            else if(this.direction === DIRECTION_ENUM.BOTTOM){\r\n                this.direction = DIRECTION_ENUM.LEFT;\r\n            }\r\n            else if(this.direction === DIRECTION_ENUM.LEFT){\r\n                this.direction = DIRECTION_ENUM.TOP;\r\n            }\r\n            this.state = ENTITY_STATE_ENUM.TURNRIGHT;\r\n            EventManager.Instance.emit(EVENT_ENUM.PLAYER_MOVE_END);\r\n        }\r\n    }\r\n\r\n\r\n    //判断是否撞墙了\r\n    willBlock(inputDirection: CONTROLLER_ENUM):boolean{\r\n        //解构出自己数据\r\n        const {targetX:x, targetY:y, direction} = this;\r\n        //解构出地图信息\r\n        const {tileInfo} = DataManager.Instance;\r\n        //解构出门的信息\r\n        const {x:doorX, y:doorY, state:doorState} = DataManager.Instance.door;\r\n        //解构出未死亡的敌人信息\r\n        const enemies:EnemyManager[] = DataManager.Instance.enemies.filter(enemy=>enemy.state !== ENTITY_STATE_ENUM.DEATH);\r\n\r\n\r\n        \r\n        if(inputDirection === CONTROLLER_ENUM.TOP){\r\n            //输入方向为上\r\n            //拿到下一个y坐标(用二维坐标来表示角色位置而不是position)\r\n            const playerNextY = y - 1;\r\n            if(direction === DIRECTION_ENUM.TOP){\r\n                //人当前方向也是上\r\n                //往上直接遇到墙\r\n                if(playerNextY < 0){\r\n                    this.state = ENTITY_STATE_ENUM.BLOCKFRONT;\r\n                    return true;\r\n                }\r\n\r\n                //拿到下两个瓦片，一个是人物，一个是枪，总不能枪怼墙上\r\n                const weaponNextY = y - 2;\r\n                const playerTile = tileInfo[x][playerNextY];\r\n                const weaponTile = tileInfo[x][weaponNextY];\r\n\r\n                //判断是否碰到了门\r\n                if(((x === doorX && playerNextY === doorY)|| (x === doorX && weaponNextY === doorY))\r\n                && doorState !== ENTITY_STATE_ENUM.DEATH\r\n                ){\r\n                    this.state = ENTITY_STATE_ENUM.BLOCKFRONT;\r\n                    return true;    \r\n                }\r\n\r\n                //判断是否碰到了敌人\r\n                enemies.forEach((enemy)=>{\r\n                    const {x:enemyX, y:enemyY} = enemy;\r\n                    if((x === enemyX && playerNextY === enemyY)\r\n                    || (x === enemyX && weaponNextY === enemyY)\r\n                    ){\r\n                            this.state = ENTITY_STATE_ENUM.BLOCKFRONT;\r\n                            return true;    \r\n                    }\r\n                });\r\n\r\n\r\n                //判断地图元素\r\n                if(playerTile && playerTile.moveable && (!weaponTile || weaponTile.turnable)){\r\n                    //人能走 且 枪能走，要么瓦片不存在要么瓦片可以转动\r\n                    //empty\r\n                }\r\n                else{\r\n                    this.state = ENTITY_STATE_ENUM.BLOCKFRONT;\r\n                    return true;\r\n                }\r\n\r\n            }\r\n            else if(direction === DIRECTION_ENUM.LEFT){\r\n                //当前方向为左\r\n                //需要三个瓦片，左上角\r\n                let weaponNextX = x - 1;\r\n                if(playerNextY < 0){\r\n                    this.state = ENTITY_STATE_ENUM.BLOCKLEFT;\r\n                    return;\r\n                }\r\n\r\n                //拿到下两个瓦片\r\n                //这个时候枪是横向左，人可能不被挡住，但是枪会\r\n                const playerTile = tileInfo[x][playerNextY];\r\n                const weaponTile = tileInfo[weaponNextX][playerNextY];\r\n\r\n                if(playerTile && playerTile.moveable && (!weaponTile || weaponTile.turnable)){\r\n                    //人能走\r\n                    //枪不存在，或者枪能转\r\n\r\n\r\n                }\r\n                else{\r\n                    //待定\r\n                    this.state = ENTITY_STATE_ENUM.BLOCKLEFT;\r\n                    return true;\r\n                }\r\n\r\n\r\n            }\r\n            else if(direction === DIRECTION_ENUM.BOTTOM){\r\n                //当前方向为下\r\n                //只需要下一个瓦片可走就行\r\n                if(playerNextY < 0){\r\n                    this.state = ENTITY_STATE_ENUM.BLOCKBACK;\r\n                    return;\r\n                }\r\n                //拿到瓦片\r\n                const playerTile = tileInfo[x][playerNextY];\r\n                if(playerTile && playerTile.moveable){\r\n                    //人能走就行\r\n                }\r\n                else{\r\n                    this.state = ENTITY_STATE_ENUM.BLOCKBACK;\r\n                    return true;\r\n                }\r\n            }\r\n            else if(direction === DIRECTION_ENUM.RIGHT){\r\n                //当前方向为右\r\n                //需要三个瓦片，右上角\r\n                let weaponNextX = x + 1;\r\n\r\n                if(playerNextY < 0){\r\n                    this.state = ENTITY_STATE_ENUM.BLOCKRIGHT;\r\n                    return;\r\n                }\r\n                const playerTile = tileInfo[x][playerNextY];\r\n                const weaponTile = tileInfo[weaponNextX][playerNextY];\r\n                if(playerTile && playerTile.moveable && (!weaponTile || weaponTile.moveable)){\r\n                    //人物：下一个瓦片且可移动\r\n                    //枪：不存在或能转动\r\n\r\n                }\r\n                else{\r\n                    this.state = ENTITY_STATE_ENUM.BLOCKRIGHT;\r\n                    return true;\r\n                }\r\n\r\n            }\r\n        }\r\n        else if(inputDirection === CONTROLLER_ENUM.LEFT){\r\n            //输入方向为左\r\n            if(direction === DIRECTION_ENUM.TOP){\r\n                //人物方向为上\r\n                const playerNextX = x - 1;\r\n                const weaponNextY = y - 1;\r\n\r\n                if(playerNextX < 0){\r\n                    this.state = ENTITY_STATE_ENUM.BLOCKFRONT;\r\n                    return;\r\n                }\r\n                const playerTile = tileInfo[playerNextX][y];\r\n                const weaponTile = tileInfo[playerNextX][weaponNextY]\r\n                if(playerTile && playerTile.moveable && (!weaponTile || weaponTile.moveable)){\r\n                    //人：能走\r\n                    //枪不存在，或者枪能转\r\n                }\r\n                else{\r\n                    this.state = ENTITY_STATE_ENUM.BLOCKFRONT;\r\n                    return true;\r\n                }\r\n\r\n            }\r\n            else if(direction === DIRECTION_ENUM.LEFT){\r\n                //人物方向为左\r\n                const playerNextX = x - 1;\r\n                const weaponNextX = x - 2;\r\n                \r\n                if(playerNextX < 0){\r\n                    this.state = ENTITY_STATE_ENUM.BLOCKLEFT;\r\n                    return;\r\n                }\r\n\r\n                const playerTile = tileInfo[playerNextX][y];\r\n                const weaponTile = tileInfo[weaponNextX][y];\r\n\r\n                if(playerTile && playerTile.moveable && (!weaponTile || weaponTile.moveable)){\r\n\r\n                }\r\n                else{\r\n                    this.state = ENTITY_STATE_ENUM.BLOCKLEFT;\r\n                    return true;\r\n                }\r\n\r\n            }\r\n            else if(direction === DIRECTION_ENUM.BOTTOM){\r\n                //人物方向为下\r\n                const playerNextX = x - 1;\r\n                const weaponNextY = y + 1;\r\n\r\n                if(playerNextX < 0){\r\n                    this.state = ENTITY_STATE_ENUM.BLOCKBACK;\r\n                    return;\r\n                }\r\n\r\n                const playerTile = tileInfo[playerNextX][y];\r\n                const weaponTile = tileInfo[playerNextX][weaponNextY];\r\n                if(playerTile && playerTile.moveable && (!weaponTile || weaponTile.moveable)){\r\n\r\n                }\r\n                else{\r\n                    this.state = ENTITY_STATE_ENUM.BLOCKBACK;\r\n                    return true;\r\n                }\r\n\r\n\r\n            }\r\n            else if(direction === DIRECTION_ENUM.RIGHT){\r\n                //人物方向为右\r\n                const playerNextX = x - 1;\r\n                if(playerNextX < 0){\r\n                    this.state = ENTITY_STATE_ENUM.BLOCKRIGHT;\r\n                    return;\r\n                }\r\n\r\n                const playerTile = tileInfo[playerNextX][y];\r\n\r\n                if(playerTile && playerTile.moveable){\r\n\r\n                }\r\n                else{\r\n                    this.state = ENTITY_STATE_ENUM.BLOCKRIGHT;\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        else if(inputDirection === CONTROLLER_ENUM.BOTTOM){\r\n            //输入方向向下\r\n            if(direction === DIRECTION_ENUM.TOP){\r\n                //人物向上\r\n                const playerNextY = y + 1;\r\n                if(playerNextY < 0){\r\n                    this.state = ENTITY_STATE_ENUM.BLOCKFRONT;\r\n                    return;\r\n                }\r\n                \r\n                const playerTile = tileInfo[x][playerNextY];\r\n                if(playerTile && playerTile.moveable){\r\n\r\n                }\r\n                else{\r\n                    this.state = ENTITY_STATE_ENUM.BLOCKFRONT;\r\n                    return true;\r\n                }\r\n            }\r\n            else if(direction === DIRECTION_ENUM.LEFT){\r\n                //人物向左\r\n                const playerNextY = y + 1;\r\n                const weaponNextX = x - 1;\r\n\r\n                if(playerNextY < 0){\r\n                    this.state = ENTITY_STATE_ENUM.BLOCKLEFT;\r\n                    return;\r\n                }\r\n                \r\n                const playerTile = tileInfo[x][playerNextY];\r\n                const weaponTile = tileInfo[weaponNextX][playerNextY];\r\n                if(playerTile && playerTile.moveable && (!weaponTile || weaponTile.moveable)){\r\n                    //人可走\r\n                    //枪不存在，或者枪能转\r\n                }\r\n                else{\r\n                    this.state = ENTITY_STATE_ENUM.BLOCKLEFT;\r\n                    return true;\r\n                }\r\n            }\r\n            else if(direction === DIRECTION_ENUM.BOTTOM){\r\n                //人物向下\r\n                const playerNextY = y + 1;\r\n                const weaponNextY = y + 2;\r\n\r\n                if(playerNextY < 0){\r\n                    this.state = ENTITY_STATE_ENUM.BLOCKBACK;\r\n                    return;\r\n                }\r\n                \r\n                const playerTile = tileInfo[x][playerNextY];\r\n                const weaponTile = tileInfo[x][weaponNextY];\r\n                if(playerTile && playerTile.moveable && (!weaponTile || weaponTile.moveable)){\r\n                    //人可走\r\n                    //枪不存在，或者枪能转\r\n                }\r\n                else{\r\n                    this.state = ENTITY_STATE_ENUM.BLOCKBACK;\r\n                    return true;\r\n                }\r\n            }\r\n            else if(direction === DIRECTION_ENUM.RIGHT){\r\n                //人物向右\r\n                const playerNextY = y + 1;\r\n                const weaponNextX = x + 1;\r\n\r\n                if(playerNextY < 0){\r\n                    this.state = ENTITY_STATE_ENUM.BLOCKRIGHT;\r\n                    return;\r\n                }\r\n                \r\n                const playerTile = tileInfo[x][playerNextY];\r\n                const weaponTile = tileInfo[weaponNextX][playerNextY];\r\n                if(playerTile && playerTile.moveable && (!weaponTile || weaponTile.moveable)){\r\n                    //人可走\r\n                    //枪不存在，或者枪能转\r\n                }\r\n                else{\r\n                    this.state = ENTITY_STATE_ENUM.BLOCKRIGHT;\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        else if(inputDirection === CONTROLLER_ENUM.RIGHT){\r\n            //输入方向向右\r\n            if(direction === DIRECTION_ENUM.TOP){\r\n                //人物向上\r\n                const playerNextX = x + 1;\r\n                const weaponNextY = y - 1;\r\n\r\n                if(playerNextX < 0){\r\n                    this.state = ENTITY_STATE_ENUM.BLOCKFRONT;\r\n                    return;\r\n                }\r\n\r\n                const playerTile = tileInfo[playerNextX][y];\r\n                const weaponTile = tileInfo[playerNextX][weaponNextY];\r\n\r\n                if(playerTile && playerTile.moveable && (!weaponTile || weaponTile.moveable)){\r\n\r\n                }\r\n                else{\r\n                    this.state = ENTITY_STATE_ENUM.BLOCKFRONT;\r\n                    return true;\r\n                }\r\n            }\r\n            else if(direction === DIRECTION_ENUM.LEFT){\r\n                //人物向左\r\n                const playerNextX = x + 1;\r\n                if(playerNextX < 0){\r\n                    this.state = ENTITY_STATE_ENUM.BLOCKLEFT;\r\n                    return;\r\n                }\r\n                const playerTile = tileInfo[playerNextX][y];\r\n                if(playerTile && playerTile.moveable){\r\n\r\n                }\r\n                else{\r\n                    this.state = ENTITY_STATE_ENUM.BLOCKLEFT;\r\n                    return true;\r\n                }\r\n            }\r\n            else if(direction === DIRECTION_ENUM.BOTTOM){\r\n                //人物向下\r\n                const playerNextX = x + 1;\r\n                const weaponNextY = y + 1;\r\n                if(playerNextX < 0){\r\n                    this.state = ENTITY_STATE_ENUM.BLOCKBACK;\r\n                    return;\r\n                }\r\n\r\n                const playerTile = tileInfo[playerNextX][y];\r\n                const weaponTile = tileInfo[playerNextX][weaponNextY];\r\n                if(playerTile && playerTile.moveable && (!weaponTile || weaponTile.moveable)){\r\n\r\n                }\r\n                else{\r\n                    this.state = ENTITY_STATE_ENUM.BLOCKBACK;\r\n                    return true;\r\n                }\r\n\r\n            }\r\n            else if(direction === DIRECTION_ENUM.RIGHT){\r\n                //人物向右\r\n                const playerNextX = x + 1;\r\n                const weaponNextX = x + 2;\r\n                if(playerNextX < 0){\r\n                    this.state = ENTITY_STATE_ENUM.BLOCKRIGHT;\r\n                    return;\r\n                }\r\n\r\n                const playerTile = tileInfo[playerNextX][y];\r\n                const weaponTile = tileInfo[weaponNextX][y];\r\n                if(playerTile && playerTile.moveable && (!weaponTile || weaponTile.moveable)){\r\n\r\n                }\r\n                else{\r\n                    this.state = ENTITY_STATE_ENUM.BLOCKRIGHT;\r\n                    return true;\r\n                }\r\n\r\n            }\r\n        }\r\n        else if(inputDirection === CONTROLLER_ENUM.TURNLEFT){\r\n            //输入方向向左转\r\n            //需要判断三个瓦片\r\n            let nextX;\r\n            let nextY;\r\n\r\n            if(direction === DIRECTION_ENUM.TOP){\r\n                nextX = x - 1;\r\n                nextY = y - 1;\r\n            }\r\n            else if(direction === DIRECTION_ENUM.BOTTOM){\r\n                nextX = x + 1;\r\n                nextY = y + 1;\r\n            }\r\n            else if(direction === DIRECTION_ENUM.LEFT){\r\n                nextX = x - 1;\r\n                nextY = y + 1;\r\n            }\r\n            else if(direction === DIRECTION_ENUM.RIGHT){\r\n                nextX = x + 1;\r\n                nextY = y - 1;\r\n            }\r\n\r\n            if(\r\n                   (!tileInfo[x][nextY] || tileInfo[x][nextY].turnable)\r\n                && (!tileInfo[nextX][y] || tileInfo[nextX][y].turnable)\r\n                && (!tileInfo[nextX][nextY] || tileInfo[nextX][nextY].turnable)\r\n            ){\r\n                //empty\r\n            }\r\n            else{\r\n                this.state = ENTITY_STATE_ENUM.BLOCKTURNLEFT;\r\n                return true;\r\n            }\r\n\r\n            return false;\r\n        }\r\n        else if(inputDirection === CONTROLLER_ENUM.TURNRIGHT){\r\n            //输入方向向左转\r\n            //需要判断三个瓦片\r\n            let nextX;\r\n            let nextY;\r\n            if(direction === DIRECTION_ENUM.TOP){\r\n                nextX = x + 1;\r\n                nextY = y - 1;\r\n            }\r\n            else if(direction === DIRECTION_ENUM.BOTTOM){\r\n                nextX = x - 1;\r\n                nextY = y + 1;\r\n            }\r\n            else if(direction === DIRECTION_ENUM.LEFT){\r\n                nextX = x - 1;\r\n                nextY = y - 1;\r\n            }\r\n            else if(direction === DIRECTION_ENUM.RIGHT){\r\n                nextX = x + 1;\r\n                nextY = y + 1;\r\n            }\r\n\r\n            if(\r\n                   (!tileInfo[x][nextY] || tileInfo[x][nextY].turnable)\r\n                && (!tileInfo[nextX][y] || tileInfo[nextX][y].turnable)\r\n                && (!tileInfo[nextX][nextY] || tileInfo[nextX][nextY].turnable)\r\n            ){\r\n                //empty\r\n            }\r\n            else{\r\n                this.state = ENTITY_STATE_ENUM.BLOCKTURNRIGHT;\r\n                return true;\r\n            }\r\n\r\n            return false;\r\n        }\r\n\r\n        return false;\r\n\r\n    }\r\n\r\n    \r\n}\r\n\r\n\r\n"]}