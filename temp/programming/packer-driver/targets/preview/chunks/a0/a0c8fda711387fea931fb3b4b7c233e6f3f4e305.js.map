{"version":3,"sources":["file:///E:/git/Cramped_Room_Of_Death/assets/scripts/ui/ShakeManager.ts"],"names":["_decorator","Component","game","EVENT_ENUM","SHAKE_TYPE_ENUM","EventManager","ccclass","property","ShakeManager","_isShaking","_oldTime","_oldPos","x","y","_type","onLoad","Instance","on","SCREEN_SHAKE","onShake","onDestroy","off","type","totalTime","node","position","stop","update","duration","amount","frequency","curSecond","totalSecond","offset","Math","sin","PI","TOP","setPosition","BOTTOM","LEFT","RIGHT"],"mappings":"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","sourcesContent":["import { _decorator, Component, game } from 'cc';\r\nimport { EVENT_ENUM, SHAKE_TYPE_ENUM } from '../../enums';\r\nimport EventManager from '../../runtime/EventManager';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('ShakeManager')\r\nexport class ShakeManager extends Component {\r\n    private _isShaking: boolean = false;\r\n    private _oldTime: number = 0;\r\n    private _oldPos: { x: number, y: number } = { x: 0, y: 0 };\r\n    private _type:SHAKE_TYPE_ENUM;\r\n\r\n    onLoad() {\r\n        EventManager.Instance.on(EVENT_ENUM.SCREEN_SHAKE, this.onShake, this);\r\n    }\r\n\r\n    onDestroy() {\r\n        EventManager.Instance.off(EVENT_ENUM.SCREEN_SHAKE, this.onShake);\r\n    }\r\n\r\n\r\n    onShake(type: SHAKE_TYPE_ENUM) {\r\n        if (this._isShaking) {\r\n            return;\r\n        }\r\n\r\n        this._type = type;\r\n        this._oldTime = game.totalTime;\r\n        this._isShaking = true;\r\n        this._oldPos.x = this.node.position.x;\r\n        this._oldPos.y = this.node.position.y;\r\n    }\r\n\r\n    stop(){\r\n        this._isShaking = false;\r\n    }\r\n\r\n    update() {\r\n        if (this._isShaking) {\r\n            const duration = 200;\r\n            const amount = 1.6;\r\n            const frequency = 1.6;\r\n            const curSecond = (game.totalTime - this._oldTime) / 1000;\r\n            const totalSecond = duration / 1000;\r\n            const offset = amount * Math.sin(frequency * Math.PI * curSecond);\r\n            \r\n            if(this._type === SHAKE_TYPE_ENUM.TOP){\r\n                this.node.setPosition(this._oldPos.x, this._oldPos.y - offset);\r\n            }\r\n            else if(this._type === SHAKE_TYPE_ENUM.BOTTOM){\r\n                this.node.setPosition(this._oldPos.x, this._oldPos.y + offset);\r\n            }\r\n            else if(this._type === SHAKE_TYPE_ENUM.LEFT){\r\n                this.node.setPosition(this._oldPos.x - offset, this._oldPos.y);\r\n            }\r\n            else if(this._type === SHAKE_TYPE_ENUM.RIGHT){\r\n                this.node.setPosition(this._oldPos.x + offset, this._oldPos.y);\r\n            }\r\n            \r\n\r\n            if (curSecond > totalSecond) {\r\n                this._isShaking = false;\r\n                this.node.setPosition(this._oldPos.x, this._oldPos.y);\r\n            }\r\n        }\r\n    }\r\n}\r\n"]}