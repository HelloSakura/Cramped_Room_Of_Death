{"version":3,"sources":["file:///E:/git/Cramped_Room_Of_Death/assets/scripts/scenes/BattleManager.ts"],"names":["_decorator","Component","Node","TileMapManager","levels","DataManager","TILE_HEIGHT","TILE_WIDTH","EventManager","DIRECTION_ENUM","ENTITY_STATE_ENUM","ENTITY_TYPE_ENUM","EVENT_ENUM","createUINode","PlayerManager","WoodenSkeletonManager","DoorManager","IronSkeletonManager","ccclass","property","BattleManager","level","stage","onLoad","Instance","on","NEXT_LEVEL","nextLevel","onDestroy","off","start","generateStage","initLevel","levelIndex","clearLevel","mapInfo","mapRowCount","length","mapColumnCount","generateTileMap","generateDoor","generateEnemy","generatePlayer","destroyAllChildren","reset","setParent","node","name","tileMap","tileMapManager","addComponent","init","adaptPos","player","playManager","x","y","type","PLAYER","direction","TOP","state","IDLE","emit","PLAYER_BORN","door","doorManager","enemy","woodenSkeletonManager","SKELETON_WOODEN","enemies","push","ironSkeleton","ironSkeletonManager","SKELETON_IRON","disX","disY","setPosition"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node } from 'cc';\r\nimport { TileMapManager } from '../tile/TileMapManager';\r\nimport levels, { ILevel } from '../../levels';\r\nimport DataManager from '../../runtime/DataManager';\r\nimport { TILE_HEIGHT, TILE_WIDTH } from '../tile/TileManger';\r\nimport EventManager from '../../runtime/EventManager';\r\nimport { DIRECTION_ENUM, ENTITY_STATE_ENUM, ENTITY_TYPE_ENUM, EVENT_ENUM } from '../../enums';\r\nimport { createUINode } from '../../utils';\r\nimport { PlayerManager } from '../player/PlayerManager';\r\nimport { WoodenSkeletonManager } from '../woodenSkeleton/WoodenSkeletonManager';\r\nimport { DoorManager } from '../door/DoorManager';\r\nimport { IronSkeletonManager } from '../ironSkeleton/IronSkeletonManager';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('BattleManager')\r\nexport class BattleManager extends Component {\r\n    level:ILevel;\r\n    stage:Node;\r\n\r\n    //\r\n    onLoad(){\r\n        //绑定切换关卡\r\n        EventManager.Instance.on(EVENT_ENUM.NEXT_LEVEL, this.nextLevel, this);\r\n    }\r\n\r\n    onDestroy(){\r\n        //解绑切换关卡\r\n        EventManager.Instance.off(EVENT_ENUM.NEXT_LEVEL, this.nextLevel)\r\n    }\r\n\r\n    start() {\r\n        this.generateStage();\r\n        this.initLevel();\r\n    }\r\n\r\n    initLevel(){\r\n        const level = levels[`level${DataManager.Instance.levelIndex}`];\r\n        if(level){\r\n            this.clearLevel();\r\n            this.level = level;\r\n            DataManager.Instance.mapInfo = this.level.mapInfo;\r\n            DataManager.Instance.mapRowCount = this.level.mapInfo.length || 0;\r\n            DataManager.Instance.mapColumnCount = this.level.mapInfo[0].length || 0;\r\n\r\n            this.generateTileMap();\r\n            this.generateDoor();\r\n            this.generateEnemy();\r\n            //生成player\r\n            this.generatePlayer();\r\n            \r\n            \r\n        }\r\n    }\r\n\r\n    nextLevel(){\r\n        DataManager.Instance.levelIndex++;\r\n        this.initLevel();\r\n    }\r\n\r\n    clearLevel(){\r\n        //清空数据，销毁上一关地图后再加载下一关\r\n        this.stage.destroyAllChildren();\r\n        DataManager.Instance.reset();\r\n    }\r\n\r\n    generateStage(){\r\n        //创建舞台，所有单元放在舞台上\r\n        this.stage = new Node();\r\n        this.stage.setParent(this.node);\r\n        this.stage.name = \"stage\";\r\n    }\r\n\r\n\r\n    async generateTileMap(){\r\n        //创建瓦片地图节点\r\n        let tileMap = new Node();\r\n        tileMap.setParent(this.stage);\r\n\r\n        //执行生成逻辑，放在组件上\r\n        const tileMapManager = tileMap.addComponent(TileMapManager);\r\n        await tileMapManager.init();\r\n\r\n        //地图居中\r\n        this.adaptPos();\r\n    }\r\n\r\n    async generatePlayer(){\r\n        const player = createUINode();\r\n        player.setParent(this.stage);\r\n        const playManager = player.addComponent(PlayerManager);\r\n        await playManager.init({\r\n            x:2,\r\n            y:8,\r\n            type: ENTITY_TYPE_ENUM.PLAYER,\r\n            direction:DIRECTION_ENUM.TOP,\r\n            state:ENTITY_STATE_ENUM.IDLE\r\n        });\r\n        DataManager.Instance.player = playManager;\r\n        EventManager.Instance.emit(EVENT_ENUM.PLAYER_BORN, true);\r\n        \r\n    }\r\n\r\n    async generateDoor(){\r\n        const door = createUINode();\r\n        door.setParent(this.stage);\r\n        const doorManager = door.addComponent(DoorManager);\r\n        await doorManager.init();\r\n        DataManager.Instance.door = doorManager;\r\n    }\r\n\r\n    async generateEnemy(){\r\n        const enemy = createUINode();\r\n        enemy.setParent(this.stage);\r\n        const woodenSkeletonManager = enemy.addComponent(WoodenSkeletonManager);\r\n        await woodenSkeletonManager.init({\r\n            x:5,\r\n            y:2,\r\n            type: ENTITY_TYPE_ENUM.SKELETON_WOODEN,\r\n            direction:DIRECTION_ENUM.TOP,\r\n            state:ENTITY_STATE_ENUM.IDLE\r\n        });\r\n        //注意名字大小写，大写是类名\r\n        DataManager.Instance.enemies.push(woodenSkeletonManager);\r\n\r\n\r\n        const ironSkeleton = createUINode();\r\n        ironSkeleton.setParent(this.stage);\r\n        const ironSkeletonManager = ironSkeleton.addComponent(IronSkeletonManager);\r\n        await ironSkeletonManager.init({\r\n            x:2,\r\n            y:2,\r\n            type: ENTITY_TYPE_ENUM.SKELETON_IRON,\r\n            direction:DIRECTION_ENUM.TOP,\r\n            state:ENTITY_STATE_ENUM.IDLE\r\n        });\r\n        //注意名字大小写，大写是类名\r\n        DataManager.Instance.enemies.push(ironSkeletonManager);\r\n\r\n    }\r\n\r\n    adaptPos(){\r\n        //将舞台置为中间位置\r\n        //解包\r\n        const {mapRowCount, mapColumnCount} = DataManager.Instance;\r\n        const disX = TILE_WIDTH * mapRowCount/2;\r\n        const disY = TILE_HEIGHT * mapColumnCount/2 + 100;\r\n        this.stage.setPosition(-disX, disY);\r\n\r\n    }\r\n}\r\n\r\n\r\n"]}